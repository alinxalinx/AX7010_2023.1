// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="average_float_average_float,hls_ip_2023_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=6,HLS_SYN_DSP=0,HLS_SYN_FF=2653,HLS_SYN_LUT=3349,HLS_VERSION=2023_1}" *)

module average_float (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 52'd1;
parameter    ap_ST_fsm_state2 = 52'd2;
parameter    ap_ST_fsm_state3 = 52'd4;
parameter    ap_ST_fsm_state4 = 52'd8;
parameter    ap_ST_fsm_state5 = 52'd16;
parameter    ap_ST_fsm_state6 = 52'd32;
parameter    ap_ST_fsm_state7 = 52'd64;
parameter    ap_ST_fsm_state8 = 52'd128;
parameter    ap_ST_fsm_state9 = 52'd256;
parameter    ap_ST_fsm_state10 = 52'd512;
parameter    ap_ST_fsm_state11 = 52'd1024;
parameter    ap_ST_fsm_state12 = 52'd2048;
parameter    ap_ST_fsm_state13 = 52'd4096;
parameter    ap_ST_fsm_state14 = 52'd8192;
parameter    ap_ST_fsm_state15 = 52'd16384;
parameter    ap_ST_fsm_state16 = 52'd32768;
parameter    ap_ST_fsm_state17 = 52'd65536;
parameter    ap_ST_fsm_state18 = 52'd131072;
parameter    ap_ST_fsm_state19 = 52'd262144;
parameter    ap_ST_fsm_state20 = 52'd524288;
parameter    ap_ST_fsm_state21 = 52'd1048576;
parameter    ap_ST_fsm_state22 = 52'd2097152;
parameter    ap_ST_fsm_state23 = 52'd4194304;
parameter    ap_ST_fsm_state24 = 52'd8388608;
parameter    ap_ST_fsm_state25 = 52'd16777216;
parameter    ap_ST_fsm_state26 = 52'd33554432;
parameter    ap_ST_fsm_state27 = 52'd67108864;
parameter    ap_ST_fsm_state28 = 52'd134217728;
parameter    ap_ST_fsm_state29 = 52'd268435456;
parameter    ap_ST_fsm_state30 = 52'd536870912;
parameter    ap_ST_fsm_state31 = 52'd1073741824;
parameter    ap_ST_fsm_state32 = 52'd2147483648;
parameter    ap_ST_fsm_state33 = 52'd4294967296;
parameter    ap_ST_fsm_state34 = 52'd8589934592;
parameter    ap_ST_fsm_state35 = 52'd17179869184;
parameter    ap_ST_fsm_state36 = 52'd34359738368;
parameter    ap_ST_fsm_state37 = 52'd68719476736;
parameter    ap_ST_fsm_state38 = 52'd137438953472;
parameter    ap_ST_fsm_state39 = 52'd274877906944;
parameter    ap_ST_fsm_state40 = 52'd549755813888;
parameter    ap_ST_fsm_state41 = 52'd1099511627776;
parameter    ap_ST_fsm_state42 = 52'd2199023255552;
parameter    ap_ST_fsm_state43 = 52'd4398046511104;
parameter    ap_ST_fsm_state44 = 52'd8796093022208;
parameter    ap_ST_fsm_state45 = 52'd17592186044416;
parameter    ap_ST_fsm_state46 = 52'd35184372088832;
parameter    ap_ST_fsm_state47 = 52'd70368744177664;
parameter    ap_ST_fsm_state48 = 52'd140737488355328;
parameter    ap_ST_fsm_state49 = 52'd281474976710656;
parameter    ap_ST_fsm_state50 = 52'd562949953421312;
parameter    ap_ST_fsm_state51 = 52'd1125899906842624;
parameter    ap_ST_fsm_state52 = 52'd2251799813685248;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [51:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] src;
wire   [31:0] num;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_state3;
reg  signed [31:0] num_read_reg_388;
reg   [63:0] src_read_reg_394;
wire  signed [32:0] sext_ln11_fu_185_p1;
reg  signed [32:0] sext_ln11_reg_405;
reg   [29:0] trunc_ln14_1_reg_416;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln11_fu_211_p2;
wire   [31:0] len_fu_300_p3;
reg   [31:0] len_reg_422;
wire   [0:0] icmp_ln15_fu_312_p2;
reg   [61:0] p_cast_reg_431;
wire  signed [31:0] trunc_ln14_1_cast_fu_338_p1;
wire   [63:0] grp_fu_173_p1;
reg   [63:0] conv_reg_447;
wire    ap_CS_fsm_state19;
wire   [63:0] grp_fu_169_p2;
reg   [63:0] div_reg_455;
wire    ap_CS_fsm_state50;
wire    grp_average_float_Pipeline_1_fu_150_ap_start;
wire    grp_average_float_Pipeline_1_fu_150_ap_done;
wire    grp_average_float_Pipeline_1_fu_150_ap_idle;
wire    grp_average_float_Pipeline_1_fu_150_ap_ready;
wire    grp_average_float_Pipeline_1_fu_150_m_axi_gmem_AWVALID;
wire   [63:0] grp_average_float_Pipeline_1_fu_150_m_axi_gmem_AWADDR;
wire   [0:0] grp_average_float_Pipeline_1_fu_150_m_axi_gmem_AWID;
wire   [31:0] grp_average_float_Pipeline_1_fu_150_m_axi_gmem_AWLEN;
wire   [2:0] grp_average_float_Pipeline_1_fu_150_m_axi_gmem_AWSIZE;
wire   [1:0] grp_average_float_Pipeline_1_fu_150_m_axi_gmem_AWBURST;
wire   [1:0] grp_average_float_Pipeline_1_fu_150_m_axi_gmem_AWLOCK;
wire   [3:0] grp_average_float_Pipeline_1_fu_150_m_axi_gmem_AWCACHE;
wire   [2:0] grp_average_float_Pipeline_1_fu_150_m_axi_gmem_AWPROT;
wire   [3:0] grp_average_float_Pipeline_1_fu_150_m_axi_gmem_AWQOS;
wire   [3:0] grp_average_float_Pipeline_1_fu_150_m_axi_gmem_AWREGION;
wire   [0:0] grp_average_float_Pipeline_1_fu_150_m_axi_gmem_AWUSER;
wire    grp_average_float_Pipeline_1_fu_150_m_axi_gmem_WVALID;
wire   [31:0] grp_average_float_Pipeline_1_fu_150_m_axi_gmem_WDATA;
wire   [3:0] grp_average_float_Pipeline_1_fu_150_m_axi_gmem_WSTRB;
wire    grp_average_float_Pipeline_1_fu_150_m_axi_gmem_WLAST;
wire   [0:0] grp_average_float_Pipeline_1_fu_150_m_axi_gmem_WID;
wire   [0:0] grp_average_float_Pipeline_1_fu_150_m_axi_gmem_WUSER;
wire    grp_average_float_Pipeline_1_fu_150_m_axi_gmem_ARVALID;
wire   [63:0] grp_average_float_Pipeline_1_fu_150_m_axi_gmem_ARADDR;
wire   [0:0] grp_average_float_Pipeline_1_fu_150_m_axi_gmem_ARID;
wire   [31:0] grp_average_float_Pipeline_1_fu_150_m_axi_gmem_ARLEN;
wire   [2:0] grp_average_float_Pipeline_1_fu_150_m_axi_gmem_ARSIZE;
wire   [1:0] grp_average_float_Pipeline_1_fu_150_m_axi_gmem_ARBURST;
wire   [1:0] grp_average_float_Pipeline_1_fu_150_m_axi_gmem_ARLOCK;
wire   [3:0] grp_average_float_Pipeline_1_fu_150_m_axi_gmem_ARCACHE;
wire   [2:0] grp_average_float_Pipeline_1_fu_150_m_axi_gmem_ARPROT;
wire   [3:0] grp_average_float_Pipeline_1_fu_150_m_axi_gmem_ARQOS;
wire   [3:0] grp_average_float_Pipeline_1_fu_150_m_axi_gmem_ARREGION;
wire   [0:0] grp_average_float_Pipeline_1_fu_150_m_axi_gmem_ARUSER;
wire    grp_average_float_Pipeline_1_fu_150_m_axi_gmem_RREADY;
wire    grp_average_float_Pipeline_1_fu_150_m_axi_gmem_BREADY;
wire   [31:0] grp_average_float_Pipeline_1_fu_150_cachebuff_din;
wire    grp_average_float_Pipeline_1_fu_150_cachebuff_write;
wire    grp_average_float_Pipeline_VITIS_LOOP_16_2_fu_159_ap_start;
wire    grp_average_float_Pipeline_VITIS_LOOP_16_2_fu_159_ap_done;
wire    grp_average_float_Pipeline_VITIS_LOOP_16_2_fu_159_ap_idle;
wire    grp_average_float_Pipeline_VITIS_LOOP_16_2_fu_159_ap_ready;
wire    grp_average_float_Pipeline_VITIS_LOOP_16_2_fu_159_cachebuff_read;
wire   [63:0] grp_average_float_Pipeline_VITIS_LOOP_16_2_fu_159_add5_i_out_o;
wire    grp_average_float_Pipeline_VITIS_LOOP_16_2_fu_159_add5_i_out_o_ap_vld;
wire    gmem_AWREADY;
wire    gmem_WREADY;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [63:0] gmem_ARADDR;
reg   [31:0] gmem_ARLEN;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [31:0] gmem_RDATA;
wire   [8:0] gmem_RFIFONUM;
wire    gmem_BVALID;
reg    grp_average_float_Pipeline_1_fu_150_ap_start_reg;
wire    ap_CS_fsm_state10;
reg   [51:0] ap_NS_fsm;
wire    ap_NS_fsm_state11;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    cachebuff_full_n;
reg    cachebuff_write;
reg    grp_average_float_Pipeline_VITIS_LOOP_16_2_fu_159_ap_start_reg;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire   [31:0] cachebuff_dout;
wire    cachebuff_empty_n;
reg    cachebuff_read;
reg   [63:0] sum_promoted_i_fu_116;
wire  signed [63:0] p_cast_cast_fu_328_p1;
wire    ap_CS_fsm_state20;
reg   [31:0] indvars_iv_fu_120;
wire   [31:0] add_ln11_1_fu_347_p2;
wire   [31:0] xor_ln11_fu_179_p2;
wire    ap_CS_fsm_state13;
reg   [31:0] i_fu_124;
wire   [31:0] add_ln11_fu_342_p2;
wire    ap_CS_fsm_state51;
wire  signed [31:0] xor_ln11_fu_179_p0;
wire  signed [31:0] sext_ln11_fu_185_p0;
wire   [32:0] zext_ln11_fu_207_p1;
wire   [0:0] icmp_ln14_fu_216_p2;
wire   [29:0] trunc_ln14_fu_222_p1;
wire   [29:0] select_ln14_fu_226_p3;
wire   [31:0] shl_ln_fu_234_p3;
wire   [31:0] sub_ln14_fu_242_p2;
wire   [30:0] trunc_ln14_2_fu_258_p1;
wire   [32:0] shl_ln14_1_fu_262_p3;
wire   [63:0] zext_ln14_fu_270_p1;
wire   [31:0] sub_ln14_1_fu_279_p2;
wire   [25:0] tmp_fu_284_p4;
wire   [0:0] icmp_ln14_1_fu_294_p2;
wire   [29:0] trunc_ln7_fu_308_p1;
wire   [63:0] add_ln14_fu_274_p2;
wire   [31:0] grp_fu_166_p1;
wire    ap_CS_fsm_state52;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
reg    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
reg    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ce_reg;
wire   [31:0] ap_return;

// power-on initialization
initial begin
#0 ap_CS_fsm = 52'd1;
#0 grp_average_float_Pipeline_1_fu_150_ap_start_reg = 1'b0;
#0 grp_average_float_Pipeline_VITIS_LOOP_16_2_fu_159_ap_start_reg = 1'b0;
end

average_float_average_float_Pipeline_1 grp_average_float_Pipeline_1_fu_150(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_average_float_Pipeline_1_fu_150_ap_start),
    .ap_done(grp_average_float_Pipeline_1_fu_150_ap_done),
    .ap_idle(grp_average_float_Pipeline_1_fu_150_ap_idle),
    .ap_ready(grp_average_float_Pipeline_1_fu_150_ap_ready),
    .m_axi_gmem_AWVALID(grp_average_float_Pipeline_1_fu_150_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(1'b0),
    .m_axi_gmem_AWADDR(grp_average_float_Pipeline_1_fu_150_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_average_float_Pipeline_1_fu_150_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_average_float_Pipeline_1_fu_150_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_average_float_Pipeline_1_fu_150_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_average_float_Pipeline_1_fu_150_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_average_float_Pipeline_1_fu_150_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_average_float_Pipeline_1_fu_150_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_average_float_Pipeline_1_fu_150_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_average_float_Pipeline_1_fu_150_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_average_float_Pipeline_1_fu_150_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_average_float_Pipeline_1_fu_150_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_average_float_Pipeline_1_fu_150_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(1'b0),
    .m_axi_gmem_WDATA(grp_average_float_Pipeline_1_fu_150_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_average_float_Pipeline_1_fu_150_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_average_float_Pipeline_1_fu_150_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_average_float_Pipeline_1_fu_150_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_average_float_Pipeline_1_fu_150_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_average_float_Pipeline_1_fu_150_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(gmem_ARREADY),
    .m_axi_gmem_ARADDR(grp_average_float_Pipeline_1_fu_150_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_average_float_Pipeline_1_fu_150_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_average_float_Pipeline_1_fu_150_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_average_float_Pipeline_1_fu_150_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_average_float_Pipeline_1_fu_150_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_average_float_Pipeline_1_fu_150_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_average_float_Pipeline_1_fu_150_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_average_float_Pipeline_1_fu_150_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_average_float_Pipeline_1_fu_150_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_average_float_Pipeline_1_fu_150_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_average_float_Pipeline_1_fu_150_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(gmem_RVALID),
    .m_axi_gmem_RREADY(grp_average_float_Pipeline_1_fu_150_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(gmem_RDATA),
    .m_axi_gmem_RLAST(1'b0),
    .m_axi_gmem_RID(1'd0),
    .m_axi_gmem_RFIFONUM(gmem_RFIFONUM),
    .m_axi_gmem_RUSER(1'd0),
    .m_axi_gmem_RRESP(2'd0),
    .m_axi_gmem_BVALID(1'b0),
    .m_axi_gmem_BREADY(grp_average_float_Pipeline_1_fu_150_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .cachebuff_din(grp_average_float_Pipeline_1_fu_150_cachebuff_din),
    .cachebuff_full_n(cachebuff_full_n),
    .cachebuff_write(grp_average_float_Pipeline_1_fu_150_cachebuff_write),
    .p_cast_cast(p_cast_reg_431),
    .zext_ln14(trunc_ln14_1_reg_416)
);

average_float_average_float_Pipeline_VITIS_LOOP_16_2 grp_average_float_Pipeline_VITIS_LOOP_16_2_fu_159(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_average_float_Pipeline_VITIS_LOOP_16_2_fu_159_ap_start),
    .ap_done(grp_average_float_Pipeline_VITIS_LOOP_16_2_fu_159_ap_done),
    .ap_idle(grp_average_float_Pipeline_VITIS_LOOP_16_2_fu_159_ap_idle),
    .ap_ready(grp_average_float_Pipeline_VITIS_LOOP_16_2_fu_159_ap_ready),
    .len(len_reg_422),
    .cachebuff_dout(cachebuff_dout),
    .cachebuff_empty_n(cachebuff_empty_n),
    .cachebuff_read(grp_average_float_Pipeline_VITIS_LOOP_16_2_fu_159_cachebuff_read),
    .add5_i_out_i(sum_promoted_i_fu_116),
    .add5_i_out_o(grp_average_float_Pipeline_VITIS_LOOP_16_2_fu_159_add5_i_out_o),
    .add5_i_out_o_ap_vld(grp_average_float_Pipeline_VITIS_LOOP_16_2_fu_159_add5_i_out_o_ap_vld)
);

average_float_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .ap_return(grp_fu_166_p1),
    .src(src),
    .num(num)
);

average_float_gmem_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_ARADDR),
    .I_ARLEN(gmem_ARLEN),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RFIFONUM(gmem_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(32'd0),
    .I_WSTRB(4'd0),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(1'b0)
);

average_float_fptrunc_64ns_32_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
fptrunc_64ns_32_2_no_dsp_1_U12(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(div_reg_455),
    .ce(1'b1),
    .dout(grp_fu_166_p1)
);

average_float_ddiv_64ns_64ns_64_31_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_31_no_dsp_1_U13(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(sum_promoted_i_fu_116),
    .din1(conv_reg_447),
    .ce(1'b1),
    .dout(grp_fu_169_p2)
);

average_float_sitodp_32s_64_5_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sitodp_32s_64_5_no_dsp_1_U14(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(num_read_reg_388),
    .ce(1'b1),
    .dout(grp_fu_173_p1)
);

average_float_fifo_w32_d64_A cachebuff_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_average_float_Pipeline_1_fu_150_cachebuff_din),
    .if_full_n(cachebuff_full_n),
    .if_write(cachebuff_write),
    .if_dout(cachebuff_dout),
    .if_empty_n(cachebuff_empty_n),
    .if_read(cachebuff_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_average_float_Pipeline_1_fu_150_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state11) & (1'b1 == ap_CS_fsm_state10))) begin
            grp_average_float_Pipeline_1_fu_150_ap_start_reg <= 1'b1;
        end else if ((grp_average_float_Pipeline_1_fu_150_ap_ready == 1'b1)) begin
            grp_average_float_Pipeline_1_fu_150_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_average_float_Pipeline_VITIS_LOOP_16_2_fu_159_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state14)) begin
            grp_average_float_Pipeline_VITIS_LOOP_16_2_fu_159_ap_start_reg <= 1'b1;
        end else if ((grp_average_float_Pipeline_VITIS_LOOP_16_2_fu_159_ap_ready == 1'b1)) begin
            grp_average_float_Pipeline_VITIS_LOOP_16_2_fu_159_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_fu_124 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        i_fu_124 <= add_ln11_fu_342_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvars_iv_fu_120 <= xor_ln11_fu_179_p2;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        indvars_iv_fu_120 <= add_ln11_1_fu_347_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        sum_promoted_i_fu_116 <= 64'd0;
    end else if (((grp_average_float_Pipeline_VITIS_LOOP_16_2_fu_159_add5_i_out_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        sum_promoted_i_fu_116 <= grp_average_float_Pipeline_VITIS_LOOP_16_2_fu_159_add5_i_out_o;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        conv_reg_447 <= grp_fu_173_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        div_reg_455 <= grp_fu_169_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln11_fu_211_p2 == 1'd1))) begin
        len_reg_422 <= len_fu_300_p3;
        trunc_ln14_1_reg_416 <= {{sub_ln14_fu_242_p2[31:2]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        num_read_reg_388 <= num;
        sext_ln11_reg_405 <= sext_ln11_fu_185_p1;
        src_read_reg_394 <= src;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln15_fu_312_p2 == 1'd0) & (icmp_ln11_fu_211_p2 == 1'd1))) begin
        p_cast_reg_431 <= {{add_ln14_fu_274_p2[63:2]}};
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

always @ (*) begin
    if ((grp_average_float_Pipeline_1_fu_150_ap_done == 1'b0)) begin
        ap_ST_fsm_state12_blk = 1'b1;
    end else begin
        ap_ST_fsm_state12_blk = 1'b0;
    end
end

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

always @ (*) begin
    if ((grp_average_float_Pipeline_VITIS_LOOP_16_2_fu_159_ap_done == 1'b0)) begin
        ap_ST_fsm_state15_blk = 1'b1;
    end else begin
        ap_ST_fsm_state15_blk = 1'b0;
    end
end

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

always @ (*) begin
    if ((gmem_ARREADY == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        cachebuff_read = grp_average_float_Pipeline_VITIS_LOOP_16_2_fu_159_cachebuff_read;
    end else begin
        cachebuff_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        cachebuff_write = grp_average_float_Pipeline_1_fu_150_cachebuff_write;
    end else begin
        cachebuff_write = 1'b0;
    end
end

always @ (*) begin
    if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        gmem_ARADDR = p_cast_cast_fu_328_p1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        gmem_ARADDR = grp_average_float_Pipeline_1_fu_150_m_axi_gmem_ARADDR;
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        gmem_ARLEN = trunc_ln14_1_cast_fu_338_p1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        gmem_ARLEN = grp_average_float_Pipeline_1_fu_150_m_axi_gmem_ARLEN;
    end else begin
        gmem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        gmem_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        gmem_ARVALID = grp_average_float_Pipeline_1_fu_150_m_axi_gmem_ARVALID;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        gmem_RREADY = grp_average_float_Pipeline_1_fu_150_m_axi_gmem_RREADY;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln15_fu_312_p2 == 1'd1) & (icmp_ln11_fu_211_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln15_fu_312_p2 == 1'd0) & (icmp_ln11_fu_211_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (grp_average_float_Pipeline_1_fu_150_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((grp_average_float_Pipeline_VITIS_LOOP_16_2_fu_159_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln11_1_fu_347_p2 = (indvars_iv_fu_120 + 32'd64);

assign add_ln11_fu_342_p2 = (i_fu_124 + 32'd64);

assign add_ln14_fu_274_p2 = (zext_ln14_fu_270_p1 + src_read_reg_394);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_NS_fsm_state11 = ap_NS_fsm[32'd10];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_average_float_Pipeline_1_fu_150_ap_start = grp_average_float_Pipeline_1_fu_150_ap_start_reg;

assign grp_average_float_Pipeline_VITIS_LOOP_16_2_fu_159_ap_start = grp_average_float_Pipeline_VITIS_LOOP_16_2_fu_159_ap_start_reg;

assign icmp_ln11_fu_211_p2 = (($signed(zext_ln11_fu_207_p1) < $signed(sext_ln11_reg_405)) ? 1'b1 : 1'b0);

assign icmp_ln14_1_fu_294_p2 = (($signed(tmp_fu_284_p4) < $signed(26'd1)) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_216_p2 = (($signed(indvars_iv_fu_120) > $signed(32'd4294967231)) ? 1'b1 : 1'b0);

assign icmp_ln15_fu_312_p2 = ((trunc_ln7_fu_308_p1 == 30'd0) ? 1'b1 : 1'b0);

assign len_fu_300_p3 = ((icmp_ln14_1_fu_294_p2[0:0] == 1'b1) ? sub_ln14_1_fu_279_p2 : 32'd64);

assign p_cast_cast_fu_328_p1 = $signed(p_cast_reg_431);

assign select_ln14_fu_226_p3 = ((icmp_ln14_fu_216_p2[0:0] == 1'b1) ? trunc_ln14_fu_222_p1 : 30'd1073741759);

assign sext_ln11_fu_185_p0 = num;

assign sext_ln11_fu_185_p1 = sext_ln11_fu_185_p0;

assign shl_ln14_1_fu_262_p3 = {{trunc_ln14_2_fu_258_p1}, {2'd0}};

assign shl_ln_fu_234_p3 = {{select_ln14_fu_226_p3}, {2'd0}};

assign sub_ln14_1_fu_279_p2 = ($signed(num_read_reg_388) - $signed(i_fu_124));

assign sub_ln14_fu_242_p2 = ($signed(32'd4294967292) - $signed(shl_ln_fu_234_p3));

assign tmp_fu_284_p4 = {{sub_ln14_1_fu_279_p2[31:6]}};

assign trunc_ln14_1_cast_fu_338_p1 = $signed(trunc_ln14_1_reg_416);

assign trunc_ln14_2_fu_258_p1 = i_fu_124[30:0];

assign trunc_ln14_fu_222_p1 = indvars_iv_fu_120[29:0];

assign trunc_ln7_fu_308_p1 = len_fu_300_p3[29:0];

assign xor_ln11_fu_179_p0 = num;

assign xor_ln11_fu_179_p2 = (xor_ln11_fu_179_p0 ^ 32'd4294967295);

assign zext_ln11_fu_207_p1 = i_fu_124;

assign zext_ln14_fu_270_p1 = shl_ln14_1_fu_262_p3;

endmodule //average_float
