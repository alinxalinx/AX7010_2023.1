-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sobel_focus_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    grayImg_data_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    grayImg_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    grayImg_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    grayImg_data_empty_n : IN STD_LOGIC;
    grayImg_data_read : OUT STD_LOGIC;
    sobelImg_x_data_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    sobelImg_x_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    sobelImg_x_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    sobelImg_x_data_full_n : IN STD_LOGIC;
    sobelImg_x_data_write : OUT STD_LOGIC;
    sobelImg_y_data_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    sobelImg_y_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    sobelImg_y_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    sobelImg_y_data_full_n : IN STD_LOGIC;
    sobelImg_y_data_write : OUT STD_LOGIC );
end;


architecture behav of sobel_focus_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv13_2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_439 : STD_LOGIC_VECTOR (10 downto 0) := "10000111001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv11_438 : STD_LOGIC_VECTOR (10 downto 0) := "10000111000";
    constant ap_const_lv13_3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal sobelImg_x_data_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal sobelImg_y_data_blk_n : STD_LOGIC;
    signal trunc_ln311_fu_226_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln311_reg_483 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln366_fu_208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bottom_1_fu_267_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal bottom_1_reg_488 : STD_LOGIC_VECTOR (1 downto 0);
    signal mid_1_fu_298_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal mid_1_reg_493 : STD_LOGIC_VECTOR (1 downto 0);
    signal tp_1_fu_329_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tp_1_reg_498 : STD_LOGIC_VECTOR (1 downto 0);
    signal cmp_i_i603_i_fu_338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i603_i_reg_503 : STD_LOGIC_VECTOR (0 downto 0);
    signal ref_tmp_xFGradientX3x3_0_0_s_fu_169_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_tmp_reg_508 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal buf_ce0 : STD_LOGIC;
    signal buf_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_ce1 : STD_LOGIC;
    signal buf_we1 : STD_LOGIC;
    signal buf_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_ce0 : STD_LOGIC;
    signal buf_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_ce1 : STD_LOGIC;
    signal buf_1_we1 : STD_LOGIC;
    signal buf_1_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_ap_start : STD_LOGIC;
    signal grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_ap_done : STD_LOGIC;
    signal grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_ap_idle : STD_LOGIC;
    signal grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_ap_ready : STD_LOGIC;
    signal grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_grayImg_data_read : STD_LOGIC;
    signal grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_buf_1_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_buf_1_ce1 : STD_LOGIC;
    signal grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_buf_1_we1 : STD_LOGIC;
    signal grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_buf_1_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_buf_r_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_buf_r_ce1 : STD_LOGIC;
    signal grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_buf_r_we1 : STD_LOGIC;
    signal grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_buf_r_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_ap_start : STD_LOGIC;
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_ap_done : STD_LOGIC;
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_ap_idle : STD_LOGIC;
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_ap_ready : STD_LOGIC;
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_grayImg_data_read : STD_LOGIC;
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_sobelImg_x_data_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_sobelImg_x_data_write : STD_LOGIC;
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_sobelImg_y_data_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_sobelImg_y_data_write : STD_LOGIC;
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_r_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_r_ce0 : STD_LOGIC;
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_r_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_r_ce1 : STD_LOGIC;
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_r_we1 : STD_LOGIC;
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_r_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_1_ce0 : STD_LOGIC;
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_1_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_1_ce1 : STD_LOGIC;
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_1_we1 : STD_LOGIC;
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_1_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_2_ce0 : STD_LOGIC;
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_2_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_2_ce1 : STD_LOGIC;
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_2_we1 : STD_LOGIC;
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_2_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_src_buf3_1_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_src_buf3_1_out_ap_vld : STD_LOGIC;
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_src_buf2_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_src_buf2_out_ap_vld : STD_LOGIC;
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_src_buf3_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_src_buf3_out_ap_vld : STD_LOGIC;
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_src_buf1_1_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_src_buf1_1_out_ap_vld : STD_LOGIC;
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_src_buf1_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_src_buf1_out_ap_vld : STD_LOGIC;
    signal ref_tmp_xFGradientX3x3_0_0_s_fu_169_ap_ready : STD_LOGIC;
    signal grp_xFGradientY3x3_0_0_s_fu_182_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xFGradientY3x3_0_0_s_fu_182_ap_ce : STD_LOGIC;
    signal ap_block_state7 : BOOLEAN;
    signal ap_block_state7_ignore_call32 : BOOLEAN;
    signal grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call20 : BOOLEAN;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal row_ind_fu_70 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_2_fu_357_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal row_fu_74 : STD_LOGIC_VECTOR (10 downto 0);
    signal row_3_fu_365_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tp_fu_78 : STD_LOGIC_VECTOR (1 downto 0);
    signal mid_fu_82 : STD_LOGIC_VECTOR (1 downto 0);
    signal bottom_fu_86 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln370_fu_231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln370_2_fu_251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln370_1_fu_245_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_39_fu_261_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_38_fu_257_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln370_fu_237_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_41_fu_292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_40_fu_284_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln370_1_fu_276_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_43_fu_323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_42_fu_315_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln370_2_fu_307_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_ind_1_fu_345_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln458_fu_351_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component sobel_focus_xFSobelFilter3x3_Pipeline_Clear_Row_Loop IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        grayImg_data_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        grayImg_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        grayImg_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        grayImg_data_empty_n : IN STD_LOGIC;
        grayImg_data_read : OUT STD_LOGIC;
        buf_1_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        buf_1_ce1 : OUT STD_LOGIC;
        buf_1_we1 : OUT STD_LOGIC;
        buf_1_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        buf_r_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        buf_r_ce1 : OUT STD_LOGIC;
        buf_r_we1 : OUT STD_LOGIC;
        buf_r_d1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component sobel_focus_xFSobelFilter3x3_Pipeline_Col_Loop IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        grayImg_data_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        grayImg_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        grayImg_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        grayImg_data_empty_n : IN STD_LOGIC;
        grayImg_data_read : OUT STD_LOGIC;
        sobelImg_x_data_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        sobelImg_x_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        sobelImg_x_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        sobelImg_x_data_full_n : IN STD_LOGIC;
        sobelImg_x_data_write : OUT STD_LOGIC;
        sobelImg_y_data_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        sobelImg_y_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        sobelImg_y_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        sobelImg_y_data_full_n : IN STD_LOGIC;
        sobelImg_y_data_write : OUT STD_LOGIC;
        buf_r_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        buf_r_ce0 : OUT STD_LOGIC;
        buf_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        buf_r_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        buf_r_ce1 : OUT STD_LOGIC;
        buf_r_we1 : OUT STD_LOGIC;
        buf_r_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        buf_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        buf_1_ce0 : OUT STD_LOGIC;
        buf_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        buf_1_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        buf_1_ce1 : OUT STD_LOGIC;
        buf_1_we1 : OUT STD_LOGIC;
        buf_1_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        buf_2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        buf_2_ce0 : OUT STD_LOGIC;
        buf_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        buf_2_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        buf_2_ce1 : OUT STD_LOGIC;
        buf_2_we1 : OUT STD_LOGIC;
        buf_2_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        tp_1 : IN STD_LOGIC_VECTOR (1 downto 0);
        mid_1 : IN STD_LOGIC_VECTOR (1 downto 0);
        bottom_1 : IN STD_LOGIC_VECTOR (1 downto 0);
        trunc_ln : IN STD_LOGIC_VECTOR (1 downto 0);
        cmp_i_i603_i : IN STD_LOGIC_VECTOR (0 downto 0);
        src_buf3_1_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        src_buf3_1_out_ap_vld : OUT STD_LOGIC;
        src_buf2_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        src_buf2_out_ap_vld : OUT STD_LOGIC;
        src_buf3_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        src_buf3_out_ap_vld : OUT STD_LOGIC;
        src_buf1_1_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        src_buf1_1_out_ap_vld : OUT STD_LOGIC;
        src_buf1_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        src_buf1_out_ap_vld : OUT STD_LOGIC );
    end component;


    component sobel_focus_xFGradientX3x3_0_0_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        t0_val : IN STD_LOGIC_VECTOR (7 downto 0);
        t2_val : IN STD_LOGIC_VECTOR (7 downto 0);
        m0_val : IN STD_LOGIC_VECTOR (7 downto 0);
        m2_val : IN STD_LOGIC_VECTOR (7 downto 0);
        b0_val : IN STD_LOGIC_VECTOR (7 downto 0);
        b2_val : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component sobel_focus_xFGradientY3x3_0_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        t0_val : IN STD_LOGIC_VECTOR (7 downto 0);
        t1_val : IN STD_LOGIC_VECTOR (7 downto 0);
        t2_val : IN STD_LOGIC_VECTOR (7 downto 0);
        b0_val : IN STD_LOGIC_VECTOR (7 downto 0);
        b1_val : IN STD_LOGIC_VECTOR (7 downto 0);
        b2_val : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component sobel_focus_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_s_buf_RAM_S2P_BRAbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    buf_U : component sobel_focus_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_s_buf_RAM_S2P_BRAbkb
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_r_address0,
        ce0 => buf_ce0,
        q0 => buf_q0,
        address1 => buf_address1,
        ce1 => buf_ce1,
        we1 => buf_we1,
        d1 => buf_d1);

    buf_1_U : component sobel_focus_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_s_buf_RAM_S2P_BRAbkb
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_1_address0,
        ce0 => buf_1_ce0,
        q0 => buf_1_q0,
        address1 => buf_1_address1,
        ce1 => buf_1_ce1,
        we1 => buf_1_we1,
        d1 => buf_1_d1);

    buf_2_U : component sobel_focus_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_s_buf_RAM_S2P_BRAbkb
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_2_address0,
        ce0 => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_2_ce0,
        q0 => buf_2_q0,
        address1 => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_2_address1,
        ce1 => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_2_ce1,
        we1 => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_2_we1,
        d1 => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_2_d1);

    grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136 : component sobel_focus_xFSobelFilter3x3_Pipeline_Clear_Row_Loop
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_ap_start,
        ap_done => grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_ap_done,
        ap_idle => grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_ap_idle,
        ap_ready => grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_ap_ready,
        grayImg_data_dout => grayImg_data_dout,
        grayImg_data_num_data_valid => ap_const_lv2_0,
        grayImg_data_fifo_cap => ap_const_lv2_0,
        grayImg_data_empty_n => grayImg_data_empty_n,
        grayImg_data_read => grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_grayImg_data_read,
        buf_1_address1 => grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_buf_1_address1,
        buf_1_ce1 => grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_buf_1_ce1,
        buf_1_we1 => grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_buf_1_we1,
        buf_1_d1 => grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_buf_1_d1,
        buf_r_address1 => grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_buf_r_address1,
        buf_r_ce1 => grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_buf_r_ce1,
        buf_r_we1 => grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_buf_r_we1,
        buf_r_d1 => grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_buf_r_d1);

    grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146 : component sobel_focus_xFSobelFilter3x3_Pipeline_Col_Loop
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_ap_start,
        ap_done => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_ap_done,
        ap_idle => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_ap_idle,
        ap_ready => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_ap_ready,
        grayImg_data_dout => grayImg_data_dout,
        grayImg_data_num_data_valid => ap_const_lv2_0,
        grayImg_data_fifo_cap => ap_const_lv2_0,
        grayImg_data_empty_n => grayImg_data_empty_n,
        grayImg_data_read => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_grayImg_data_read,
        sobelImg_x_data_din => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_sobelImg_x_data_din,
        sobelImg_x_data_num_data_valid => ap_const_lv2_0,
        sobelImg_x_data_fifo_cap => ap_const_lv2_0,
        sobelImg_x_data_full_n => sobelImg_x_data_full_n,
        sobelImg_x_data_write => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_sobelImg_x_data_write,
        sobelImg_y_data_din => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_sobelImg_y_data_din,
        sobelImg_y_data_num_data_valid => ap_const_lv2_0,
        sobelImg_y_data_fifo_cap => ap_const_lv2_0,
        sobelImg_y_data_full_n => sobelImg_y_data_full_n,
        sobelImg_y_data_write => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_sobelImg_y_data_write,
        buf_r_address0 => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_r_address0,
        buf_r_ce0 => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_r_ce0,
        buf_r_q0 => buf_q0,
        buf_r_address1 => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_r_address1,
        buf_r_ce1 => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_r_ce1,
        buf_r_we1 => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_r_we1,
        buf_r_d1 => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_r_d1,
        buf_1_address0 => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_1_address0,
        buf_1_ce0 => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_1_ce0,
        buf_1_q0 => buf_1_q0,
        buf_1_address1 => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_1_address1,
        buf_1_ce1 => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_1_ce1,
        buf_1_we1 => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_1_we1,
        buf_1_d1 => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_1_d1,
        buf_2_address0 => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_2_address0,
        buf_2_ce0 => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_2_ce0,
        buf_2_q0 => buf_2_q0,
        buf_2_address1 => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_2_address1,
        buf_2_ce1 => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_2_ce1,
        buf_2_we1 => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_2_we1,
        buf_2_d1 => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_2_d1,
        tp_1 => tp_1_reg_498,
        mid_1 => mid_1_reg_493,
        bottom_1 => bottom_1_reg_488,
        trunc_ln => trunc_ln311_reg_483,
        cmp_i_i603_i => cmp_i_i603_i_reg_503,
        src_buf3_1_out => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_src_buf3_1_out,
        src_buf3_1_out_ap_vld => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_src_buf3_1_out_ap_vld,
        src_buf2_out => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_src_buf2_out,
        src_buf2_out_ap_vld => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_src_buf2_out_ap_vld,
        src_buf3_out => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_src_buf3_out,
        src_buf3_out_ap_vld => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_src_buf3_out_ap_vld,
        src_buf1_1_out => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_src_buf1_1_out,
        src_buf1_1_out_ap_vld => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_src_buf1_1_out_ap_vld,
        src_buf1_out => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_src_buf1_out,
        src_buf1_out_ap_vld => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_src_buf1_out_ap_vld);

    ref_tmp_xFGradientX3x3_0_0_s_fu_169 : component sobel_focus_xFGradientX3x3_0_0_s
    port map (
        ap_ready => ref_tmp_xFGradientX3x3_0_0_s_fu_169_ap_ready,
        t0_val => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_src_buf1_out,
        t2_val => ap_const_lv8_0,
        m0_val => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_src_buf2_out,
        m2_val => ap_const_lv8_0,
        b0_val => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_src_buf3_1_out,
        b2_val => ap_const_lv8_0,
        ap_return => ref_tmp_xFGradientX3x3_0_0_s_fu_169_ap_return);

    grp_xFGradientY3x3_0_0_s_fu_182 : component sobel_focus_xFGradientY3x3_0_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        t0_val => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_src_buf1_out,
        t1_val => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_src_buf1_1_out,
        t2_val => ap_const_lv8_0,
        b0_val => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_src_buf3_1_out,
        b1_val => grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_src_buf3_out,
        b2_val => ap_const_lv8_0,
        ap_return => grp_xFGradientY3x3_0_0_s_fu_182_ap_return,
        ap_ce => grp_xFGradientY3x3_0_0_s_fu_182_ap_ce);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln366_fu_208_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_ap_ready = ap_const_logic_1)) then 
                    grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln366_fu_208_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_ap_ready = ap_const_logic_1)) then 
                    grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    row_fu_74_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                row_fu_74 <= ap_const_lv11_1;
            elsif (((icmp_ln366_fu_208_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                row_fu_74 <= row_3_fu_365_p2;
            end if; 
        end if;
    end process;

    row_ind_fu_70_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                row_ind_fu_70 <= ap_const_lv13_2;
            elsif (((icmp_ln366_fu_208_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                row_ind_fu_70 <= row_ind_2_fu_357_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln366_fu_208_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                bottom_1_reg_488 <= bottom_1_fu_267_p3;
                bottom_fu_86 <= bottom_1_fu_267_p3;
                cmp_i_i603_i_reg_503 <= cmp_i_i603_i_fu_338_p2;
                mid_1_reg_493 <= mid_1_fu_298_p3;
                mid_fu_82 <= mid_1_fu_298_p3;
                tp_1_reg_498 <= tp_1_fu_329_p3;
                tp_fu_78 <= tp_1_fu_329_p3;
                trunc_ln311_reg_483 <= trunc_ln311_fu_226_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                ref_tmp_reg_508 <= ref_tmp_xFGradientX3x3_0_0_s_fu_169_ap_return;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, sobelImg_x_data_full_n, sobelImg_y_data_full_n, ap_CS_fsm_state7, ap_CS_fsm_state4, icmp_ln366_fu_208_p2, grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_ap_done, grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state5)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((icmp_ln366_fu_208_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if ((not(((sobelImg_y_data_full_n = ap_const_logic_0) or (sobelImg_x_data_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);

    ap_ST_fsm_state1_blk_assign_proc : process(real_start, ap_done_reg)
    begin
        if (((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_ap_done)
    begin
        if ((grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_ap_done)
    begin
        if ((grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(sobelImg_x_data_full_n, sobelImg_y_data_full_n)
    begin
        if (((sobelImg_y_data_full_n = ap_const_logic_0) or (sobelImg_x_data_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call20_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1_ignore_call20 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_block_state7_assign_proc : process(sobelImg_x_data_full_n, sobelImg_y_data_full_n)
    begin
                ap_block_state7 <= ((sobelImg_y_data_full_n = ap_const_logic_0) or (sobelImg_x_data_full_n = ap_const_logic_0));
    end process;


    ap_block_state7_ignore_call32_assign_proc : process(sobelImg_x_data_full_n, sobelImg_y_data_full_n)
    begin
                ap_block_state7_ignore_call32 <= ((sobelImg_y_data_full_n = ap_const_logic_0) or (sobelImg_x_data_full_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state4, icmp_ln366_fu_208_p2)
    begin
        if (((icmp_ln366_fu_208_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (real_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    bottom_1_fu_267_p3 <= 
        empty_38_fu_257_p1 when (empty_39_fu_261_p2(0) = '1') else 
        select_ln370_fu_237_p3;

    buf_1_address1_assign_proc : process(grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_buf_1_address1, grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_1_address1, ap_CS_fsm_state2, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_1_address1 <= grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_1_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buf_1_address1 <= grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_buf_1_address1;
        else 
            buf_1_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_1_ce0_assign_proc : process(grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_1_ce0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_1_ce0 <= grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_1_ce0;
        else 
            buf_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_ce1_assign_proc : process(grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_buf_1_ce1, grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_1_ce1, ap_CS_fsm_state2, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_1_ce1 <= grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_1_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buf_1_ce1 <= grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_buf_1_ce1;
        else 
            buf_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_d1_assign_proc : process(grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_buf_1_d1, grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_1_d1, ap_CS_fsm_state2, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_1_d1 <= grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_1_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buf_1_d1 <= grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_buf_1_d1;
        else 
            buf_1_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_1_we1_assign_proc : process(grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_buf_1_we1, grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_1_we1, ap_CS_fsm_state2, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_1_we1 <= grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_1_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buf_1_we1 <= grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_buf_1_we1;
        else 
            buf_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_address1_assign_proc : process(grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_buf_r_address1, grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_r_address1, ap_CS_fsm_state2, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_address1 <= grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_r_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buf_address1 <= grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_buf_r_address1;
        else 
            buf_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_ce0_assign_proc : process(grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_r_ce0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_ce0 <= grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_r_ce0;
        else 
            buf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_ce1_assign_proc : process(grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_buf_r_ce1, grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_r_ce1, ap_CS_fsm_state2, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_ce1 <= grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_r_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buf_ce1 <= grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_buf_r_ce1;
        else 
            buf_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_d1_assign_proc : process(grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_buf_r_d1, grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_r_d1, ap_CS_fsm_state2, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_d1 <= grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_r_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buf_d1 <= grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_buf_r_d1;
        else 
            buf_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_we1_assign_proc : process(grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_buf_r_we1, grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_r_we1, ap_CS_fsm_state2, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_we1 <= grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_buf_r_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buf_we1 <= grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_buf_r_we1;
        else 
            buf_we1 <= ap_const_logic_0;
        end if; 
    end process;

    cmp_i_i603_i_fu_338_p2 <= "1" when (unsigned(row_fu_74) < unsigned(ap_const_lv11_438)) else "0";
    empty_38_fu_257_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln370_2_fu_251_p2),2));
    empty_39_fu_261_p2 <= (icmp_ln370_2_fu_251_p2 or icmp_ln370_1_fu_245_p2);
    empty_40_fu_284_p3 <= 
        ap_const_lv2_0 when (icmp_ln370_2_fu_251_p2(0) = '1') else 
        ap_const_lv2_2;
    empty_41_fu_292_p2 <= (icmp_ln370_2_fu_251_p2 or icmp_ln370_1_fu_245_p2);
    empty_42_fu_315_p3 <= 
        ap_const_lv2_2 when (icmp_ln370_2_fu_251_p2(0) = '1') else 
        ap_const_lv2_1;
    empty_43_fu_323_p2 <= (icmp_ln370_2_fu_251_p2 or icmp_ln370_1_fu_245_p2);

    grayImg_data_read_assign_proc : process(grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_grayImg_data_read, grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_grayImg_data_read, ap_CS_fsm_state2, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grayImg_data_read <= grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_grayImg_data_read;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grayImg_data_read <= grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_grayImg_data_read;
        else 
            grayImg_data_read <= ap_const_logic_0;
        end if; 
    end process;


    grp_xFGradientY3x3_0_0_s_fu_182_ap_ce_assign_proc : process(sobelImg_x_data_full_n, sobelImg_y_data_full_n, ap_CS_fsm_state7, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (not(((sobelImg_y_data_full_n = ap_const_logic_0) or (sobelImg_x_data_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            grp_xFGradientY3x3_0_0_s_fu_182_ap_ce <= ap_const_logic_1;
        else 
            grp_xFGradientY3x3_0_0_s_fu_182_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_ap_start <= grp_xFSobelFilter3x3_Pipeline_Clear_Row_Loop_fu_136_ap_start_reg;
    grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_ap_start <= grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_ap_start_reg;
    icmp_ln366_fu_208_p2 <= "1" when (row_fu_74 = ap_const_lv11_439) else "0";
    icmp_ln370_1_fu_245_p2 <= "1" when (row_ind_fu_70 = ap_const_lv13_0) else "0";
    icmp_ln370_2_fu_251_p2 <= "1" when (row_ind_fu_70 = ap_const_lv13_1) else "0";
    icmp_ln370_fu_231_p2 <= "1" when (row_ind_fu_70 = ap_const_lv13_2) else "0";
    icmp_ln458_fu_351_p2 <= "1" when (row_ind_1_fu_345_p2 = ap_const_lv13_3) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state4, icmp_ln366_fu_208_p2)
    begin
        if (((icmp_ln366_fu_208_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    mid_1_fu_298_p3 <= 
        empty_40_fu_284_p3 when (empty_41_fu_292_p2(0) = '1') else 
        select_ln370_1_fu_276_p3;

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    row_3_fu_365_p2 <= std_logic_vector(unsigned(row_fu_74) + unsigned(ap_const_lv11_1));
    row_ind_1_fu_345_p2 <= std_logic_vector(unsigned(row_ind_fu_70) + unsigned(ap_const_lv13_1));
    row_ind_2_fu_357_p3 <= 
        ap_const_lv13_0 when (icmp_ln458_fu_351_p2(0) = '1') else 
        row_ind_1_fu_345_p2;
    select_ln370_1_fu_276_p3 <= 
        ap_const_lv2_1 when (icmp_ln370_fu_231_p2(0) = '1') else 
        mid_fu_82;
    select_ln370_2_fu_307_p3 <= 
        ap_const_lv2_0 when (icmp_ln370_fu_231_p2(0) = '1') else 
        tp_fu_78;
    select_ln370_fu_237_p3 <= 
        ap_const_lv2_2 when (icmp_ln370_fu_231_p2(0) = '1') else 
        bottom_fu_86;

    sobelImg_x_data_blk_n_assign_proc : process(sobelImg_x_data_full_n, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sobelImg_x_data_blk_n <= sobelImg_x_data_full_n;
        else 
            sobelImg_x_data_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    sobelImg_x_data_din_assign_proc : process(sobelImg_x_data_full_n, sobelImg_y_data_full_n, ap_CS_fsm_state7, ref_tmp_reg_508, grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_sobelImg_x_data_din, ap_CS_fsm_state5)
    begin
        if ((not(((sobelImg_y_data_full_n = ap_const_logic_0) or (sobelImg_x_data_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            sobelImg_x_data_din <= ref_tmp_reg_508;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sobelImg_x_data_din <= grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_sobelImg_x_data_din;
        else 
            sobelImg_x_data_din <= grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_sobelImg_x_data_din;
        end if; 
    end process;


    sobelImg_x_data_write_assign_proc : process(sobelImg_x_data_full_n, sobelImg_y_data_full_n, ap_CS_fsm_state7, grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_sobelImg_x_data_write, ap_CS_fsm_state5)
    begin
        if ((not(((sobelImg_y_data_full_n = ap_const_logic_0) or (sobelImg_x_data_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            sobelImg_x_data_write <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sobelImg_x_data_write <= grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_sobelImg_x_data_write;
        else 
            sobelImg_x_data_write <= ap_const_logic_0;
        end if; 
    end process;


    sobelImg_y_data_blk_n_assign_proc : process(sobelImg_y_data_full_n, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sobelImg_y_data_blk_n <= sobelImg_y_data_full_n;
        else 
            sobelImg_y_data_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    sobelImg_y_data_din_assign_proc : process(sobelImg_x_data_full_n, sobelImg_y_data_full_n, ap_CS_fsm_state7, grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_sobelImg_y_data_din, grp_xFGradientY3x3_0_0_s_fu_182_ap_return, ap_CS_fsm_state5)
    begin
        if ((not(((sobelImg_y_data_full_n = ap_const_logic_0) or (sobelImg_x_data_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            sobelImg_y_data_din <= grp_xFGradientY3x3_0_0_s_fu_182_ap_return;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sobelImg_y_data_din <= grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_sobelImg_y_data_din;
        else 
            sobelImg_y_data_din <= grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_sobelImg_y_data_din;
        end if; 
    end process;


    sobelImg_y_data_write_assign_proc : process(sobelImg_x_data_full_n, sobelImg_y_data_full_n, ap_CS_fsm_state7, grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_sobelImg_y_data_write, ap_CS_fsm_state5)
    begin
        if ((not(((sobelImg_y_data_full_n = ap_const_logic_0) or (sobelImg_x_data_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            sobelImg_y_data_write <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sobelImg_y_data_write <= grp_xFSobelFilter3x3_Pipeline_Col_Loop_fu_146_sobelImg_y_data_write;
        else 
            sobelImg_y_data_write <= ap_const_logic_0;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tp_1_fu_329_p3 <= 
        empty_42_fu_315_p3 when (empty_43_fu_323_p2(0) = '1') else 
        select_ln370_2_fu_307_p3;
    trunc_ln311_fu_226_p1 <= row_ind_fu_70(2 - 1 downto 0);
end behav;
