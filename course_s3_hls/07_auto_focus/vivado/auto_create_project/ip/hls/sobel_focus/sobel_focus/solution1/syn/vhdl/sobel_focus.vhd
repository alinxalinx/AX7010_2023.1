-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sobel_focus is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    src_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    src_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
    src_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
    src_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    src_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    src_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    src_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    dst_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    dst_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
    dst_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
    dst_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    src_TVALID : IN STD_LOGIC;
    src_TREADY : OUT STD_LOGIC;
    dst_TVALID : OUT STD_LOGIC;
    dst_TREADY : IN STD_LOGIC );
end;


architecture behav of sobel_focus is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "sobel_focus_sobel_focus,hls_ip_2023_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.050500,HLS_SYN_LAT=2086336,HLS_SYN_TPT=2086326,HLS_SYN_MEM=3,HLS_SYN_DSP=0,HLS_SYN_FF=1491,HLS_SYN_LUT=2813,HLS_VERSION=2023_1}";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal ap_rst_n_inv : STD_LOGIC;
    signal AXIvideo2xfMat_24_16_1080_1920_1_2_U0_ap_start : STD_LOGIC;
    signal AXIvideo2xfMat_24_16_1080_1920_1_2_U0_ap_done : STD_LOGIC;
    signal AXIvideo2xfMat_24_16_1080_1920_1_2_U0_ap_continue : STD_LOGIC;
    signal AXIvideo2xfMat_24_16_1080_1920_1_2_U0_ap_idle : STD_LOGIC;
    signal AXIvideo2xfMat_24_16_1080_1920_1_2_U0_ap_ready : STD_LOGIC;
    signal AXIvideo2xfMat_24_16_1080_1920_1_2_U0_start_out : STD_LOGIC;
    signal AXIvideo2xfMat_24_16_1080_1920_1_2_U0_start_write : STD_LOGIC;
    signal AXIvideo2xfMat_24_16_1080_1920_1_2_U0_src_TREADY : STD_LOGIC;
    signal AXIvideo2xfMat_24_16_1080_1920_1_2_U0_srcImg_data_din : STD_LOGIC_VECTOR (23 downto 0);
    signal AXIvideo2xfMat_24_16_1080_1920_1_2_U0_srcImg_data_write : STD_LOGIC;
    signal duplicate_1080_1920_U0_ap_start : STD_LOGIC;
    signal duplicate_1080_1920_U0_start_full_n : STD_LOGIC;
    signal duplicate_1080_1920_U0_ap_done : STD_LOGIC;
    signal duplicate_1080_1920_U0_ap_continue : STD_LOGIC;
    signal duplicate_1080_1920_U0_ap_idle : STD_LOGIC;
    signal duplicate_1080_1920_U0_ap_ready : STD_LOGIC;
    signal duplicate_1080_1920_U0_srcImg_data_read : STD_LOGIC;
    signal duplicate_1080_1920_U0_split0_data_din : STD_LOGIC_VECTOR (23 downto 0);
    signal duplicate_1080_1920_U0_split0_data_write : STD_LOGIC;
    signal duplicate_1080_1920_U0_split1_data_din : STD_LOGIC_VECTOR (23 downto 0);
    signal duplicate_1080_1920_U0_split1_data_write : STD_LOGIC;
    signal duplicate_1080_1920_U0_start_out : STD_LOGIC;
    signal duplicate_1080_1920_U0_start_write : STD_LOGIC;
    signal xfrgb2gray_1080_1920_U0_ap_start : STD_LOGIC;
    signal xfrgb2gray_1080_1920_U0_ap_done : STD_LOGIC;
    signal xfrgb2gray_1080_1920_U0_ap_continue : STD_LOGIC;
    signal xfrgb2gray_1080_1920_U0_ap_idle : STD_LOGIC;
    signal xfrgb2gray_1080_1920_U0_ap_ready : STD_LOGIC;
    signal xfrgb2gray_1080_1920_U0_split0_data_read : STD_LOGIC;
    signal xfrgb2gray_1080_1920_U0_grayImg_data_din : STD_LOGIC_VECTOR (7 downto 0);
    signal xfrgb2gray_1080_1920_U0_grayImg_data_write : STD_LOGIC;
    signal xfrgb2gray_1080_1920_U0_start_out : STD_LOGIC;
    signal xfrgb2gray_1080_1920_U0_start_write : STD_LOGIC;
    signal xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_ap_start : STD_LOGIC;
    signal xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_ap_done : STD_LOGIC;
    signal xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_ap_continue : STD_LOGIC;
    signal xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_ap_idle : STD_LOGIC;
    signal xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_ap_ready : STD_LOGIC;
    signal xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_start_out : STD_LOGIC;
    signal xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_start_write : STD_LOGIC;
    signal xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_grayImg_data_read : STD_LOGIC;
    signal xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_sobelImg_x_data_din : STD_LOGIC_VECTOR (7 downto 0);
    signal xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_sobelImg_x_data_write : STD_LOGIC;
    signal xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_sobelImg_y_data_din : STD_LOGIC_VECTOR (7 downto 0);
    signal xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_sobelImg_y_data_write : STD_LOGIC;
    signal AddWeightedKernel_1080_1920_U0_ap_start : STD_LOGIC;
    signal AddWeightedKernel_1080_1920_U0_ap_done : STD_LOGIC;
    signal AddWeightedKernel_1080_1920_U0_ap_continue : STD_LOGIC;
    signal AddWeightedKernel_1080_1920_U0_ap_idle : STD_LOGIC;
    signal AddWeightedKernel_1080_1920_U0_ap_ready : STD_LOGIC;
    signal AddWeightedKernel_1080_1920_U0_sobelImg_x_data_read : STD_LOGIC;
    signal AddWeightedKernel_1080_1920_U0_sobelImg_y_data_read : STD_LOGIC;
    signal AddWeightedKernel_1080_1920_U0_sobelImg_data_din : STD_LOGIC_VECTOR (7 downto 0);
    signal AddWeightedKernel_1080_1920_U0_sobelImg_data_write : STD_LOGIC;
    signal AddWeightedKernel_1080_1920_U0_start_out : STD_LOGIC;
    signal AddWeightedKernel_1080_1920_U0_start_write : STD_LOGIC;
    signal sum_of_stream_1080_1920_U0_ap_start : STD_LOGIC;
    signal sum_of_stream_1080_1920_U0_ap_done : STD_LOGIC;
    signal sum_of_stream_1080_1920_U0_ap_continue : STD_LOGIC;
    signal sum_of_stream_1080_1920_U0_ap_idle : STD_LOGIC;
    signal sum_of_stream_1080_1920_U0_ap_ready : STD_LOGIC;
    signal sum_of_stream_1080_1920_U0_sobelImg_data_read : STD_LOGIC;
    signal sum_of_stream_1080_1920_U0_average : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_of_stream_1080_1920_U0_average_ap_vld : STD_LOGIC;
    signal xfMat2AXIvideo_24_16_1080_1920_1_2_U0_ap_start : STD_LOGIC;
    signal xfMat2AXIvideo_24_16_1080_1920_1_2_U0_ap_done : STD_LOGIC;
    signal xfMat2AXIvideo_24_16_1080_1920_1_2_U0_ap_continue : STD_LOGIC;
    signal xfMat2AXIvideo_24_16_1080_1920_1_2_U0_ap_idle : STD_LOGIC;
    signal xfMat2AXIvideo_24_16_1080_1920_1_2_U0_ap_ready : STD_LOGIC;
    signal xfMat2AXIvideo_24_16_1080_1920_1_2_U0_split1_data_read : STD_LOGIC;
    signal xfMat2AXIvideo_24_16_1080_1920_1_2_U0_dst_TDATA : STD_LOGIC_VECTOR (23 downto 0);
    signal xfMat2AXIvideo_24_16_1080_1920_1_2_U0_dst_TVALID : STD_LOGIC;
    signal xfMat2AXIvideo_24_16_1080_1920_1_2_U0_dst_TKEEP : STD_LOGIC_VECTOR (2 downto 0);
    signal xfMat2AXIvideo_24_16_1080_1920_1_2_U0_dst_TSTRB : STD_LOGIC_VECTOR (2 downto 0);
    signal xfMat2AXIvideo_24_16_1080_1920_1_2_U0_dst_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2AXIvideo_24_16_1080_1920_1_2_U0_dst_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2AXIvideo_24_16_1080_1920_1_2_U0_dst_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2AXIvideo_24_16_1080_1920_1_2_U0_dst_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal srcImg_data_full_n : STD_LOGIC;
    signal srcImg_data_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal srcImg_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal srcImg_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal srcImg_data_empty_n : STD_LOGIC;
    signal split0_data_full_n : STD_LOGIC;
    signal split0_data_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal split0_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal split0_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal split0_data_empty_n : STD_LOGIC;
    signal split1_data_full_n : STD_LOGIC;
    signal split1_data_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal split1_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal split1_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal split1_data_empty_n : STD_LOGIC;
    signal grayImg_data_full_n : STD_LOGIC;
    signal grayImg_data_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal grayImg_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal grayImg_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal grayImg_data_empty_n : STD_LOGIC;
    signal sobelImg_x_data_full_n : STD_LOGIC;
    signal sobelImg_x_data_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal sobelImg_x_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal sobelImg_x_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal sobelImg_x_data_empty_n : STD_LOGIC;
    signal sobelImg_y_data_full_n : STD_LOGIC;
    signal sobelImg_y_data_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal sobelImg_y_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal sobelImg_y_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal sobelImg_y_data_empty_n : STD_LOGIC;
    signal sobelImg_data_full_n : STD_LOGIC;
    signal sobelImg_data_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal sobelImg_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal sobelImg_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal sobelImg_data_empty_n : STD_LOGIC;
    signal start_for_duplicate_1080_1920_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_duplicate_1080_1920_U0_full_n : STD_LOGIC;
    signal start_for_duplicate_1080_1920_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_duplicate_1080_1920_U0_empty_n : STD_LOGIC;
    signal start_for_xfrgb2gray_1080_1920_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xfrgb2gray_1080_1920_U0_full_n : STD_LOGIC;
    signal start_for_xfrgb2gray_1080_1920_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xfrgb2gray_1080_1920_U0_empty_n : STD_LOGIC;
    signal start_for_xfMat2AXIvideo_24_16_1080_1920_1_2_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xfMat2AXIvideo_24_16_1080_1920_1_2_U0_full_n : STD_LOGIC;
    signal start_for_xfMat2AXIvideo_24_16_1080_1920_1_2_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xfMat2AXIvideo_24_16_1080_1920_1_2_U0_empty_n : STD_LOGIC;
    signal start_for_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_full_n : STD_LOGIC;
    signal start_for_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_empty_n : STD_LOGIC;
    signal start_for_AddWeightedKernel_1080_1920_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_AddWeightedKernel_1080_1920_U0_full_n : STD_LOGIC;
    signal start_for_AddWeightedKernel_1080_1920_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_AddWeightedKernel_1080_1920_U0_empty_n : STD_LOGIC;
    signal start_for_sum_of_stream_1080_1920_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_sum_of_stream_1080_1920_U0_full_n : STD_LOGIC;
    signal start_for_sum_of_stream_1080_1920_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_sum_of_stream_1080_1920_U0_empty_n : STD_LOGIC;

    component sobel_focus_AXIvideo2xfMat_24_16_1080_1920_1_2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        src_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
        src_TVALID : IN STD_LOGIC;
        src_TREADY : OUT STD_LOGIC;
        src_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
        src_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
        src_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        src_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        src_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        src_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        srcImg_data_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        srcImg_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        srcImg_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        srcImg_data_full_n : IN STD_LOGIC;
        srcImg_data_write : OUT STD_LOGIC );
    end component;


    component sobel_focus_duplicate_1080_1920_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        srcImg_data_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        srcImg_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        srcImg_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        srcImg_data_empty_n : IN STD_LOGIC;
        srcImg_data_read : OUT STD_LOGIC;
        split0_data_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        split0_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        split0_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        split0_data_full_n : IN STD_LOGIC;
        split0_data_write : OUT STD_LOGIC;
        split1_data_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        split1_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        split1_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        split1_data_full_n : IN STD_LOGIC;
        split1_data_write : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC );
    end component;


    component sobel_focus_xfrgb2gray_1080_1920_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        split0_data_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        split0_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        split0_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        split0_data_empty_n : IN STD_LOGIC;
        split0_data_read : OUT STD_LOGIC;
        grayImg_data_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        grayImg_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        grayImg_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        grayImg_data_full_n : IN STD_LOGIC;
        grayImg_data_write : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC );
    end component;


    component sobel_focus_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        grayImg_data_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        grayImg_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        grayImg_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        grayImg_data_empty_n : IN STD_LOGIC;
        grayImg_data_read : OUT STD_LOGIC;
        sobelImg_x_data_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        sobelImg_x_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        sobelImg_x_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        sobelImg_x_data_full_n : IN STD_LOGIC;
        sobelImg_x_data_write : OUT STD_LOGIC;
        sobelImg_y_data_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        sobelImg_y_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        sobelImg_y_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        sobelImg_y_data_full_n : IN STD_LOGIC;
        sobelImg_y_data_write : OUT STD_LOGIC );
    end component;


    component sobel_focus_AddWeightedKernel_1080_1920_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sobelImg_x_data_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        sobelImg_x_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        sobelImg_x_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        sobelImg_x_data_empty_n : IN STD_LOGIC;
        sobelImg_x_data_read : OUT STD_LOGIC;
        sobelImg_y_data_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        sobelImg_y_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        sobelImg_y_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        sobelImg_y_data_empty_n : IN STD_LOGIC;
        sobelImg_y_data_read : OUT STD_LOGIC;
        sobelImg_data_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        sobelImg_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        sobelImg_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        sobelImg_data_full_n : IN STD_LOGIC;
        sobelImg_data_write : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC );
    end component;


    component sobel_focus_sum_of_stream_1080_1920_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sobelImg_data_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        sobelImg_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        sobelImg_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        sobelImg_data_empty_n : IN STD_LOGIC;
        sobelImg_data_read : OUT STD_LOGIC;
        average : OUT STD_LOGIC_VECTOR (31 downto 0);
        average_ap_vld : OUT STD_LOGIC );
    end component;


    component sobel_focus_xfMat2AXIvideo_24_16_1080_1920_1_2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        split1_data_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        split1_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        split1_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        split1_data_empty_n : IN STD_LOGIC;
        split1_data_read : OUT STD_LOGIC;
        dst_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
        dst_TVALID : OUT STD_LOGIC;
        dst_TREADY : IN STD_LOGIC;
        dst_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
        dst_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
        dst_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component sobel_focus_fifo_w24_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (23 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (23 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component sobel_focus_fifo_w8_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component sobel_focus_start_for_duplicate_1080_1920_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component sobel_focus_start_for_xfrgb2gray_1080_1920_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component sobel_focus_start_for_xfMat2AXIvideo_24_16_1080_1920_1_2_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component sobel_focus_start_for_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component sobel_focus_start_for_AddWeightedKernel_1080_1920_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component sobel_focus_start_for_sum_of_stream_1080_1920_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component sobel_focus_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        average : IN STD_LOGIC_VECTOR (31 downto 0);
        average_ap_vld : IN STD_LOGIC );
    end component;



begin
    control_s_axi_U : component sobel_focus_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        average => sum_of_stream_1080_1920_U0_average,
        average_ap_vld => sum_of_stream_1080_1920_U0_average_ap_vld);

    AXIvideo2xfMat_24_16_1080_1920_1_2_U0 : component sobel_focus_AXIvideo2xfMat_24_16_1080_1920_1_2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => AXIvideo2xfMat_24_16_1080_1920_1_2_U0_ap_start,
        start_full_n => start_for_duplicate_1080_1920_U0_full_n,
        ap_done => AXIvideo2xfMat_24_16_1080_1920_1_2_U0_ap_done,
        ap_continue => AXIvideo2xfMat_24_16_1080_1920_1_2_U0_ap_continue,
        ap_idle => AXIvideo2xfMat_24_16_1080_1920_1_2_U0_ap_idle,
        ap_ready => AXIvideo2xfMat_24_16_1080_1920_1_2_U0_ap_ready,
        start_out => AXIvideo2xfMat_24_16_1080_1920_1_2_U0_start_out,
        start_write => AXIvideo2xfMat_24_16_1080_1920_1_2_U0_start_write,
        src_TDATA => src_TDATA,
        src_TVALID => src_TVALID,
        src_TREADY => AXIvideo2xfMat_24_16_1080_1920_1_2_U0_src_TREADY,
        src_TKEEP => src_TKEEP,
        src_TSTRB => src_TSTRB,
        src_TUSER => src_TUSER,
        src_TLAST => src_TLAST,
        src_TID => src_TID,
        src_TDEST => src_TDEST,
        srcImg_data_din => AXIvideo2xfMat_24_16_1080_1920_1_2_U0_srcImg_data_din,
        srcImg_data_num_data_valid => srcImg_data_num_data_valid,
        srcImg_data_fifo_cap => srcImg_data_fifo_cap,
        srcImg_data_full_n => srcImg_data_full_n,
        srcImg_data_write => AXIvideo2xfMat_24_16_1080_1920_1_2_U0_srcImg_data_write);

    duplicate_1080_1920_U0 : component sobel_focus_duplicate_1080_1920_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => duplicate_1080_1920_U0_ap_start,
        start_full_n => duplicate_1080_1920_U0_start_full_n,
        ap_done => duplicate_1080_1920_U0_ap_done,
        ap_continue => duplicate_1080_1920_U0_ap_continue,
        ap_idle => duplicate_1080_1920_U0_ap_idle,
        ap_ready => duplicate_1080_1920_U0_ap_ready,
        srcImg_data_dout => srcImg_data_dout,
        srcImg_data_num_data_valid => srcImg_data_num_data_valid,
        srcImg_data_fifo_cap => srcImg_data_fifo_cap,
        srcImg_data_empty_n => srcImg_data_empty_n,
        srcImg_data_read => duplicate_1080_1920_U0_srcImg_data_read,
        split0_data_din => duplicate_1080_1920_U0_split0_data_din,
        split0_data_num_data_valid => split0_data_num_data_valid,
        split0_data_fifo_cap => split0_data_fifo_cap,
        split0_data_full_n => split0_data_full_n,
        split0_data_write => duplicate_1080_1920_U0_split0_data_write,
        split1_data_din => duplicate_1080_1920_U0_split1_data_din,
        split1_data_num_data_valid => split1_data_num_data_valid,
        split1_data_fifo_cap => split1_data_fifo_cap,
        split1_data_full_n => split1_data_full_n,
        split1_data_write => duplicate_1080_1920_U0_split1_data_write,
        start_out => duplicate_1080_1920_U0_start_out,
        start_write => duplicate_1080_1920_U0_start_write);

    xfrgb2gray_1080_1920_U0 : component sobel_focus_xfrgb2gray_1080_1920_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => xfrgb2gray_1080_1920_U0_ap_start,
        start_full_n => start_for_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_full_n,
        ap_done => xfrgb2gray_1080_1920_U0_ap_done,
        ap_continue => xfrgb2gray_1080_1920_U0_ap_continue,
        ap_idle => xfrgb2gray_1080_1920_U0_ap_idle,
        ap_ready => xfrgb2gray_1080_1920_U0_ap_ready,
        split0_data_dout => split0_data_dout,
        split0_data_num_data_valid => split0_data_num_data_valid,
        split0_data_fifo_cap => split0_data_fifo_cap,
        split0_data_empty_n => split0_data_empty_n,
        split0_data_read => xfrgb2gray_1080_1920_U0_split0_data_read,
        grayImg_data_din => xfrgb2gray_1080_1920_U0_grayImg_data_din,
        grayImg_data_num_data_valid => grayImg_data_num_data_valid,
        grayImg_data_fifo_cap => grayImg_data_fifo_cap,
        grayImg_data_full_n => grayImg_data_full_n,
        grayImg_data_write => xfrgb2gray_1080_1920_U0_grayImg_data_write,
        start_out => xfrgb2gray_1080_1920_U0_start_out,
        start_write => xfrgb2gray_1080_1920_U0_start_write);

    xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0 : component sobel_focus_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_ap_start,
        start_full_n => start_for_AddWeightedKernel_1080_1920_U0_full_n,
        ap_done => xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_ap_done,
        ap_continue => xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_ap_continue,
        ap_idle => xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_ap_idle,
        ap_ready => xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_ap_ready,
        start_out => xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_start_out,
        start_write => xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_start_write,
        grayImg_data_dout => grayImg_data_dout,
        grayImg_data_num_data_valid => grayImg_data_num_data_valid,
        grayImg_data_fifo_cap => grayImg_data_fifo_cap,
        grayImg_data_empty_n => grayImg_data_empty_n,
        grayImg_data_read => xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_grayImg_data_read,
        sobelImg_x_data_din => xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_sobelImg_x_data_din,
        sobelImg_x_data_num_data_valid => sobelImg_x_data_num_data_valid,
        sobelImg_x_data_fifo_cap => sobelImg_x_data_fifo_cap,
        sobelImg_x_data_full_n => sobelImg_x_data_full_n,
        sobelImg_x_data_write => xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_sobelImg_x_data_write,
        sobelImg_y_data_din => xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_sobelImg_y_data_din,
        sobelImg_y_data_num_data_valid => sobelImg_y_data_num_data_valid,
        sobelImg_y_data_fifo_cap => sobelImg_y_data_fifo_cap,
        sobelImg_y_data_full_n => sobelImg_y_data_full_n,
        sobelImg_y_data_write => xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_sobelImg_y_data_write);

    AddWeightedKernel_1080_1920_U0 : component sobel_focus_AddWeightedKernel_1080_1920_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => AddWeightedKernel_1080_1920_U0_ap_start,
        start_full_n => start_for_sum_of_stream_1080_1920_U0_full_n,
        ap_done => AddWeightedKernel_1080_1920_U0_ap_done,
        ap_continue => AddWeightedKernel_1080_1920_U0_ap_continue,
        ap_idle => AddWeightedKernel_1080_1920_U0_ap_idle,
        ap_ready => AddWeightedKernel_1080_1920_U0_ap_ready,
        sobelImg_x_data_dout => sobelImg_x_data_dout,
        sobelImg_x_data_num_data_valid => sobelImg_x_data_num_data_valid,
        sobelImg_x_data_fifo_cap => sobelImg_x_data_fifo_cap,
        sobelImg_x_data_empty_n => sobelImg_x_data_empty_n,
        sobelImg_x_data_read => AddWeightedKernel_1080_1920_U0_sobelImg_x_data_read,
        sobelImg_y_data_dout => sobelImg_y_data_dout,
        sobelImg_y_data_num_data_valid => sobelImg_y_data_num_data_valid,
        sobelImg_y_data_fifo_cap => sobelImg_y_data_fifo_cap,
        sobelImg_y_data_empty_n => sobelImg_y_data_empty_n,
        sobelImg_y_data_read => AddWeightedKernel_1080_1920_U0_sobelImg_y_data_read,
        sobelImg_data_din => AddWeightedKernel_1080_1920_U0_sobelImg_data_din,
        sobelImg_data_num_data_valid => sobelImg_data_num_data_valid,
        sobelImg_data_fifo_cap => sobelImg_data_fifo_cap,
        sobelImg_data_full_n => sobelImg_data_full_n,
        sobelImg_data_write => AddWeightedKernel_1080_1920_U0_sobelImg_data_write,
        start_out => AddWeightedKernel_1080_1920_U0_start_out,
        start_write => AddWeightedKernel_1080_1920_U0_start_write);

    sum_of_stream_1080_1920_U0 : component sobel_focus_sum_of_stream_1080_1920_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => sum_of_stream_1080_1920_U0_ap_start,
        ap_done => sum_of_stream_1080_1920_U0_ap_done,
        ap_continue => sum_of_stream_1080_1920_U0_ap_continue,
        ap_idle => sum_of_stream_1080_1920_U0_ap_idle,
        ap_ready => sum_of_stream_1080_1920_U0_ap_ready,
        sobelImg_data_dout => sobelImg_data_dout,
        sobelImg_data_num_data_valid => sobelImg_data_num_data_valid,
        sobelImg_data_fifo_cap => sobelImg_data_fifo_cap,
        sobelImg_data_empty_n => sobelImg_data_empty_n,
        sobelImg_data_read => sum_of_stream_1080_1920_U0_sobelImg_data_read,
        average => sum_of_stream_1080_1920_U0_average,
        average_ap_vld => sum_of_stream_1080_1920_U0_average_ap_vld);

    xfMat2AXIvideo_24_16_1080_1920_1_2_U0 : component sobel_focus_xfMat2AXIvideo_24_16_1080_1920_1_2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_ap_start,
        ap_done => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_ap_done,
        ap_continue => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_ap_continue,
        ap_idle => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_ap_idle,
        ap_ready => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_ap_ready,
        split1_data_dout => split1_data_dout,
        split1_data_num_data_valid => split1_data_num_data_valid,
        split1_data_fifo_cap => split1_data_fifo_cap,
        split1_data_empty_n => split1_data_empty_n,
        split1_data_read => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_split1_data_read,
        dst_TDATA => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_dst_TDATA,
        dst_TVALID => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_dst_TVALID,
        dst_TREADY => dst_TREADY,
        dst_TKEEP => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_dst_TKEEP,
        dst_TSTRB => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_dst_TSTRB,
        dst_TUSER => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_dst_TUSER,
        dst_TLAST => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_dst_TLAST,
        dst_TID => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_dst_TID,
        dst_TDEST => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_dst_TDEST);

    srcImg_data_U : component sobel_focus_fifo_w24_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2xfMat_24_16_1080_1920_1_2_U0_srcImg_data_din,
        if_full_n => srcImg_data_full_n,
        if_write => AXIvideo2xfMat_24_16_1080_1920_1_2_U0_srcImg_data_write,
        if_dout => srcImg_data_dout,
        if_num_data_valid => srcImg_data_num_data_valid,
        if_fifo_cap => srcImg_data_fifo_cap,
        if_empty_n => srcImg_data_empty_n,
        if_read => duplicate_1080_1920_U0_srcImg_data_read);

    split0_data_U : component sobel_focus_fifo_w24_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => duplicate_1080_1920_U0_split0_data_din,
        if_full_n => split0_data_full_n,
        if_write => duplicate_1080_1920_U0_split0_data_write,
        if_dout => split0_data_dout,
        if_num_data_valid => split0_data_num_data_valid,
        if_fifo_cap => split0_data_fifo_cap,
        if_empty_n => split0_data_empty_n,
        if_read => xfrgb2gray_1080_1920_U0_split0_data_read);

    split1_data_U : component sobel_focus_fifo_w24_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => duplicate_1080_1920_U0_split1_data_din,
        if_full_n => split1_data_full_n,
        if_write => duplicate_1080_1920_U0_split1_data_write,
        if_dout => split1_data_dout,
        if_num_data_valid => split1_data_num_data_valid,
        if_fifo_cap => split1_data_fifo_cap,
        if_empty_n => split1_data_empty_n,
        if_read => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_split1_data_read);

    grayImg_data_U : component sobel_focus_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xfrgb2gray_1080_1920_U0_grayImg_data_din,
        if_full_n => grayImg_data_full_n,
        if_write => xfrgb2gray_1080_1920_U0_grayImg_data_write,
        if_dout => grayImg_data_dout,
        if_num_data_valid => grayImg_data_num_data_valid,
        if_fifo_cap => grayImg_data_fifo_cap,
        if_empty_n => grayImg_data_empty_n,
        if_read => xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_grayImg_data_read);

    sobelImg_x_data_U : component sobel_focus_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_sobelImg_x_data_din,
        if_full_n => sobelImg_x_data_full_n,
        if_write => xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_sobelImg_x_data_write,
        if_dout => sobelImg_x_data_dout,
        if_num_data_valid => sobelImg_x_data_num_data_valid,
        if_fifo_cap => sobelImg_x_data_fifo_cap,
        if_empty_n => sobelImg_x_data_empty_n,
        if_read => AddWeightedKernel_1080_1920_U0_sobelImg_x_data_read);

    sobelImg_y_data_U : component sobel_focus_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_sobelImg_y_data_din,
        if_full_n => sobelImg_y_data_full_n,
        if_write => xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_sobelImg_y_data_write,
        if_dout => sobelImg_y_data_dout,
        if_num_data_valid => sobelImg_y_data_num_data_valid,
        if_fifo_cap => sobelImg_y_data_fifo_cap,
        if_empty_n => sobelImg_y_data_empty_n,
        if_read => AddWeightedKernel_1080_1920_U0_sobelImg_y_data_read);

    sobelImg_data_U : component sobel_focus_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AddWeightedKernel_1080_1920_U0_sobelImg_data_din,
        if_full_n => sobelImg_data_full_n,
        if_write => AddWeightedKernel_1080_1920_U0_sobelImg_data_write,
        if_dout => sobelImg_data_dout,
        if_num_data_valid => sobelImg_data_num_data_valid,
        if_fifo_cap => sobelImg_data_fifo_cap,
        if_empty_n => sobelImg_data_empty_n,
        if_read => sum_of_stream_1080_1920_U0_sobelImg_data_read);

    start_for_duplicate_1080_1920_U0_U : component sobel_focus_start_for_duplicate_1080_1920_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_duplicate_1080_1920_U0_din,
        if_full_n => start_for_duplicate_1080_1920_U0_full_n,
        if_write => AXIvideo2xfMat_24_16_1080_1920_1_2_U0_start_write,
        if_dout => start_for_duplicate_1080_1920_U0_dout,
        if_empty_n => start_for_duplicate_1080_1920_U0_empty_n,
        if_read => duplicate_1080_1920_U0_ap_ready);

    start_for_xfrgb2gray_1080_1920_U0_U : component sobel_focus_start_for_xfrgb2gray_1080_1920_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xfrgb2gray_1080_1920_U0_din,
        if_full_n => start_for_xfrgb2gray_1080_1920_U0_full_n,
        if_write => duplicate_1080_1920_U0_start_write,
        if_dout => start_for_xfrgb2gray_1080_1920_U0_dout,
        if_empty_n => start_for_xfrgb2gray_1080_1920_U0_empty_n,
        if_read => xfrgb2gray_1080_1920_U0_ap_ready);

    start_for_xfMat2AXIvideo_24_16_1080_1920_1_2_U0_U : component sobel_focus_start_for_xfMat2AXIvideo_24_16_1080_1920_1_2_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xfMat2AXIvideo_24_16_1080_1920_1_2_U0_din,
        if_full_n => start_for_xfMat2AXIvideo_24_16_1080_1920_1_2_U0_full_n,
        if_write => duplicate_1080_1920_U0_start_write,
        if_dout => start_for_xfMat2AXIvideo_24_16_1080_1920_1_2_U0_dout,
        if_empty_n => start_for_xfMat2AXIvideo_24_16_1080_1920_1_2_U0_empty_n,
        if_read => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_ap_ready);

    start_for_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_U : component sobel_focus_start_for_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_din,
        if_full_n => start_for_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_full_n,
        if_write => xfrgb2gray_1080_1920_U0_start_write,
        if_dout => start_for_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_dout,
        if_empty_n => start_for_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_empty_n,
        if_read => xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_ap_ready);

    start_for_AddWeightedKernel_1080_1920_U0_U : component sobel_focus_start_for_AddWeightedKernel_1080_1920_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_AddWeightedKernel_1080_1920_U0_din,
        if_full_n => start_for_AddWeightedKernel_1080_1920_U0_full_n,
        if_write => xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_start_write,
        if_dout => start_for_AddWeightedKernel_1080_1920_U0_dout,
        if_empty_n => start_for_AddWeightedKernel_1080_1920_U0_empty_n,
        if_read => AddWeightedKernel_1080_1920_U0_ap_ready);

    start_for_sum_of_stream_1080_1920_U0_U : component sobel_focus_start_for_sum_of_stream_1080_1920_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_sum_of_stream_1080_1920_U0_din,
        if_full_n => start_for_sum_of_stream_1080_1920_U0_full_n,
        if_write => AddWeightedKernel_1080_1920_U0_start_write,
        if_dout => start_for_sum_of_stream_1080_1920_U0_dout,
        if_empty_n => start_for_sum_of_stream_1080_1920_U0_empty_n,
        if_read => sum_of_stream_1080_1920_U0_ap_ready);




    AXIvideo2xfMat_24_16_1080_1920_1_2_U0_ap_continue <= ap_const_logic_1;
    AXIvideo2xfMat_24_16_1080_1920_1_2_U0_ap_start <= ap_const_logic_1;
    AddWeightedKernel_1080_1920_U0_ap_continue <= ap_const_logic_1;
    AddWeightedKernel_1080_1920_U0_ap_start <= start_for_AddWeightedKernel_1080_1920_U0_empty_n;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    dst_TDATA <= xfMat2AXIvideo_24_16_1080_1920_1_2_U0_dst_TDATA;
    dst_TDEST <= xfMat2AXIvideo_24_16_1080_1920_1_2_U0_dst_TDEST;
    dst_TID <= xfMat2AXIvideo_24_16_1080_1920_1_2_U0_dst_TID;
    dst_TKEEP <= xfMat2AXIvideo_24_16_1080_1920_1_2_U0_dst_TKEEP;
    dst_TLAST <= xfMat2AXIvideo_24_16_1080_1920_1_2_U0_dst_TLAST;
    dst_TSTRB <= xfMat2AXIvideo_24_16_1080_1920_1_2_U0_dst_TSTRB;
    dst_TUSER <= xfMat2AXIvideo_24_16_1080_1920_1_2_U0_dst_TUSER;
    dst_TVALID <= xfMat2AXIvideo_24_16_1080_1920_1_2_U0_dst_TVALID;
    duplicate_1080_1920_U0_ap_continue <= ap_const_logic_1;
    duplicate_1080_1920_U0_ap_start <= start_for_duplicate_1080_1920_U0_empty_n;
    duplicate_1080_1920_U0_start_full_n <= (start_for_xfrgb2gray_1080_1920_U0_full_n and start_for_xfMat2AXIvideo_24_16_1080_1920_1_2_U0_full_n);
    src_TREADY <= AXIvideo2xfMat_24_16_1080_1920_1_2_U0_src_TREADY;
    start_for_AddWeightedKernel_1080_1920_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_duplicate_1080_1920_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_sum_of_stream_1080_1920_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_xfMat2AXIvideo_24_16_1080_1920_1_2_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_xfrgb2gray_1080_1920_U0_din <= (0=>ap_const_logic_1, others=>'-');
    sum_of_stream_1080_1920_U0_ap_continue <= ap_const_logic_1;
    sum_of_stream_1080_1920_U0_ap_start <= start_for_sum_of_stream_1080_1920_U0_empty_n;
    xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_ap_continue <= ap_const_logic_1;
    xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_ap_start <= start_for_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_2_2_2_1_1_1920_false_U0_empty_n;
    xfMat2AXIvideo_24_16_1080_1920_1_2_U0_ap_continue <= ap_const_logic_1;
    xfMat2AXIvideo_24_16_1080_1920_1_2_U0_ap_start <= start_for_xfMat2AXIvideo_24_16_1080_1920_1_2_U0_empty_n;
    xfrgb2gray_1080_1920_U0_ap_continue <= ap_const_logic_1;
    xfrgb2gray_1080_1920_U0_ap_start <= start_for_xfrgb2gray_1080_1920_U0_empty_n;
end behav;
