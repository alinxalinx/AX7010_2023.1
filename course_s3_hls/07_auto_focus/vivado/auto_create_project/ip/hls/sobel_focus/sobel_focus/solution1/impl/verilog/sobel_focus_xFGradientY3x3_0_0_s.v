// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module sobel_focus_xFGradientY3x3_0_0_s (
        ap_clk,
        ap_rst,
        t0_val,
        t1_val,
        t2_val,
        b0_val,
        b1_val,
        b2_val,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [7:0] t0_val;
input  [7:0] t1_val;
input  [7:0] t2_val;
input  [7:0] b0_val;
input  [7:0] b1_val;
input  [7:0] b2_val;
output  [7:0] ap_return;
input   ap_ce;

reg[7:0] ap_return;

wire   [7:0] add_ln117_fu_162_p2;
reg   [7:0] add_ln117_reg_216;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] tmp_reg_221;
wire   [0:0] icmp_ln122_fu_186_p2;
reg   [0:0] icmp_ln122_reg_227;
wire    ap_block_pp0_stage0;
wire   [8:0] M00_fu_70_p3;
wire   [8:0] M01_fu_82_p3;
wire   [8:0] zext_ln109_1_fu_98_p1;
wire   [8:0] zext_ln109_fu_94_p1;
wire   [8:0] A00_fu_102_p2;
wire   [8:0] zext_ln110_1_fu_116_p1;
wire   [8:0] zext_ln110_fu_112_p1;
wire   [8:0] S00_fu_120_p2;
wire   [9:0] zext_ln110_2_fu_126_p1;
wire   [9:0] zext_ln107_fu_78_p1;
wire   [9:0] add_ln113_fu_130_p2;
wire   [10:0] zext_ln108_fu_90_p1;
wire   [10:0] zext_ln114_fu_136_p1;
wire   [10:0] out_pix_2_fu_140_p2;
wire   [10:0] zext_ln109_2_fu_108_p1;
wire   [7:0] trunc_ln115_fu_146_p1;
wire   [7:0] add_ln117_1_fu_156_p2;
wire   [10:0] out_pix_fu_150_p2;
wire   [2:0] tmp_1_fu_176_p4;
wire   [0:0] xor_ln120_fu_192_p2;
wire   [0:0] or_ln120_fu_205_p2;
wire   [7:0] select_ln120_fu_197_p3;
wire   [7:0] select_ln120_1_fu_209_p3;
reg    ap_ce_reg;
reg   [7:0] ap_return_int_reg;

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1))) begin
        add_ln117_reg_216 <= add_ln117_fu_162_p2;
        icmp_ln122_reg_227 <= icmp_ln122_fu_186_p2;
        tmp_reg_221 <= out_pix_fu_150_p2[32'd10];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= select_ln120_1_fu_209_p3;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = select_ln120_1_fu_209_p3;
    end else begin
        ap_return = 'bx;
    end
end

assign A00_fu_102_p2 = (zext_ln109_1_fu_98_p1 + zext_ln109_fu_94_p1);

assign M00_fu_70_p3 = {{t1_val}, {1'd0}};

assign M01_fu_82_p3 = {{b1_val}, {1'd0}};

assign S00_fu_120_p2 = (zext_ln110_1_fu_116_p1 + zext_ln110_fu_112_p1);

assign add_ln113_fu_130_p2 = (zext_ln110_2_fu_126_p1 + zext_ln107_fu_78_p1);

assign add_ln117_1_fu_156_p2 = (trunc_ln115_fu_146_p1 + b0_val);

assign add_ln117_fu_162_p2 = (add_ln117_1_fu_156_p2 + b2_val);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign icmp_ln122_fu_186_p2 = (($signed(tmp_1_fu_176_p4) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign or_ln120_fu_205_p2 = (tmp_reg_221 | icmp_ln122_reg_227);

assign out_pix_2_fu_140_p2 = (zext_ln108_fu_90_p1 - zext_ln114_fu_136_p1);

assign out_pix_fu_150_p2 = (out_pix_2_fu_140_p2 + zext_ln109_2_fu_108_p1);

assign select_ln120_1_fu_209_p3 = ((or_ln120_fu_205_p2[0:0] == 1'b1) ? select_ln120_fu_197_p3 : add_ln117_reg_216);

assign select_ln120_fu_197_p3 = ((xor_ln120_fu_192_p2[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign tmp_1_fu_176_p4 = {{out_pix_fu_150_p2[10:8]}};

assign trunc_ln115_fu_146_p1 = out_pix_2_fu_140_p2[7:0];

assign xor_ln120_fu_192_p2 = (tmp_reg_221 ^ 1'd1);

assign zext_ln107_fu_78_p1 = M00_fu_70_p3;

assign zext_ln108_fu_90_p1 = M01_fu_82_p3;

assign zext_ln109_1_fu_98_p1 = b2_val;

assign zext_ln109_2_fu_108_p1 = A00_fu_102_p2;

assign zext_ln109_fu_94_p1 = b0_val;

assign zext_ln110_1_fu_116_p1 = t2_val;

assign zext_ln110_2_fu_126_p1 = S00_fu_120_p2;

assign zext_ln110_fu_112_p1 = t0_val;

assign zext_ln114_fu_136_p1 = add_ln113_fu_130_p2;

endmodule //sobel_focus_xFGradientY3x3_0_0_s
