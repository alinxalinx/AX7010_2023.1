-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity stream2mem_dataflow_in_loop_VITIS_LOOP_25_1_1_Loop_VITIS_LOOP_29_2_proc13 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    cacheBuff_i_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    cacheBuff_i_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
    cacheBuff_i_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
    cacheBuff_i_full_n : IN STD_LOGIC;
    cacheBuff_i_write : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (7 downto 0);
    img_data_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    img_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    img_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    img_data_empty_n : IN STD_LOGIC;
    img_data_read : OUT STD_LOGIC );
end;


architecture behav of stream2mem_dataflow_in_loop_VITIS_LOOP_25_1_1_Loop_VITIS_LOOP_29_2_proc13 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv12_4 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln29_fu_127_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal icmp_ln29_reg_169 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state12_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal img_data_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal cacheBuff_i_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal reg_101 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_block_state9_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal reg_106 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal col_2_reg_164 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal trunc_ln38_fu_143_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln38_reg_173 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal col_fu_56 : STD_LOGIC_VECTOR (11 downto 0);
    signal col_3_fu_147_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_col_2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln34_fu_133_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_01001 : BOOLEAN;
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_01001 : BOOLEAN;
    signal ap_block_pp0_stage5_01001 : BOOLEAN;
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_pp0_stage6_01001 : BOOLEAN;
    signal trunc_ln36_fu_138_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage7_01001 : BOOLEAN;
    signal ap_block_pp0_stage8_01001 : BOOLEAN;
    signal ap_block_state10_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_pp0_stage9_01001 : BOOLEAN;
    signal ap_block_state11_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_pp0_stage10_01001 : BOOLEAN;
    signal ap_block_pp0_stage11_01001 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal p_read_cast_cast_cast_cast_fu_111_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_read_cast_cast_cast_cast_cast_fu_115_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_525 : BOOLEAN;
    signal ap_condition_529 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component stream2mem_flow_control_loop_pipe IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_U : component stream2mem_flow_control_loop_pipe
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int,
        ap_continue => ap_continue);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage11_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    col_fu_56_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
                if ((ap_const_boolean_1 = ap_condition_529)) then 
                    col_fu_56 <= ap_const_lv12_0;
                elsif ((ap_const_boolean_1 = ap_condition_525)) then 
                    col_fu_56 <= col_3_fu_147_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                col_2_reg_164 <= ap_sig_allocacmp_col_2;
                icmp_ln29_reg_169 <= icmp_ln29_fu_127_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_101 <= img_data_dout(15 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_106 <= img_data_dout(23 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then
                trunc_ln38_reg_173 <= trunc_ln38_fu_143_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_condition_exit_pp0_iter0_stage0, ap_block_pp0_stage11_subdone, ap_idle_pp0_1to1, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_done_reg, cacheBuff_i_full_n)
    begin
                ap_block_pp0_stage0_01001 <= (((cacheBuff_i_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_done_reg = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_done_reg, cacheBuff_i_full_n)
    begin
                ap_block_pp0_stage0_11001 <= (((cacheBuff_i_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_done_reg = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_done_reg, cacheBuff_i_full_n)
    begin
                ap_block_pp0_stage0_subdone <= (((cacheBuff_i_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_done_reg = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage10_01001_assign_proc : process(ap_enable_reg_pp0_iter0, cacheBuff_i_full_n, icmp_ln29_reg_169)
    begin
                ap_block_pp0_stage10_01001 <= ((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage10_11001_assign_proc : process(ap_enable_reg_pp0_iter0, cacheBuff_i_full_n, icmp_ln29_reg_169)
    begin
                ap_block_pp0_stage10_11001 <= ((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage10_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, cacheBuff_i_full_n, icmp_ln29_reg_169)
    begin
                ap_block_pp0_stage10_subdone <= ((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage11_01001_assign_proc : process(ap_enable_reg_pp0_iter0, cacheBuff_i_full_n, icmp_ln29_reg_169)
    begin
                ap_block_pp0_stage11_01001 <= ((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage11_11001_assign_proc : process(ap_enable_reg_pp0_iter0, cacheBuff_i_full_n, icmp_ln29_reg_169)
    begin
                ap_block_pp0_stage11_11001 <= ((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage11_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, cacheBuff_i_full_n, icmp_ln29_reg_169)
    begin
                ap_block_pp0_stage11_subdone <= ((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage1_01001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_done_reg, cacheBuff_i_full_n, icmp_ln29_reg_169, img_data_empty_n)
    begin
                ap_block_pp0_stage1_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0)) or ((img_data_empty_n = ap_const_logic_0) and (icmp_ln29_reg_169 = ap_const_lv1_1)))));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_done_reg, cacheBuff_i_full_n, icmp_ln29_reg_169, img_data_empty_n)
    begin
                ap_block_pp0_stage1_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0)) or ((img_data_empty_n = ap_const_logic_0) and (icmp_ln29_reg_169 = ap_const_lv1_1)))));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_done_reg, cacheBuff_i_full_n, icmp_ln29_reg_169, img_data_empty_n)
    begin
                ap_block_pp0_stage1_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0)) or ((img_data_empty_n = ap_const_logic_0) and (icmp_ln29_reg_169 = ap_const_lv1_1)))));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_01001_assign_proc : process(ap_enable_reg_pp0_iter0, cacheBuff_i_full_n, icmp_ln29_reg_169)
    begin
                ap_block_pp0_stage2_01001 <= ((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter0, cacheBuff_i_full_n, icmp_ln29_reg_169)
    begin
                ap_block_pp0_stage2_11001 <= ((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, cacheBuff_i_full_n, icmp_ln29_reg_169)
    begin
                ap_block_pp0_stage2_subdone <= ((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_01001_assign_proc : process(ap_enable_reg_pp0_iter0, cacheBuff_i_full_n, icmp_ln29_reg_169)
    begin
                ap_block_pp0_stage3_01001 <= ((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter0, cacheBuff_i_full_n, icmp_ln29_reg_169)
    begin
                ap_block_pp0_stage3_11001 <= ((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, cacheBuff_i_full_n, icmp_ln29_reg_169)
    begin
                ap_block_pp0_stage3_subdone <= ((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_01001_assign_proc : process(ap_enable_reg_pp0_iter0, cacheBuff_i_full_n, icmp_ln29_reg_169)
    begin
                ap_block_pp0_stage4_01001 <= ((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage4_11001_assign_proc : process(ap_enable_reg_pp0_iter0, cacheBuff_i_full_n, icmp_ln29_reg_169)
    begin
                ap_block_pp0_stage4_11001 <= ((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, cacheBuff_i_full_n, icmp_ln29_reg_169)
    begin
                ap_block_pp0_stage4_subdone <= ((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_01001_assign_proc : process(ap_enable_reg_pp0_iter0, cacheBuff_i_full_n, icmp_ln29_reg_169, img_data_empty_n)
    begin
                ap_block_pp0_stage5_01001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0)) or ((img_data_empty_n = ap_const_logic_0) and (icmp_ln29_reg_169 = ap_const_lv1_1))));
    end process;


    ap_block_pp0_stage5_11001_assign_proc : process(ap_enable_reg_pp0_iter0, cacheBuff_i_full_n, icmp_ln29_reg_169, img_data_empty_n)
    begin
                ap_block_pp0_stage5_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0)) or ((img_data_empty_n = ap_const_logic_0) and (icmp_ln29_reg_169 = ap_const_lv1_1))));
    end process;


    ap_block_pp0_stage5_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, cacheBuff_i_full_n, icmp_ln29_reg_169, img_data_empty_n)
    begin
                ap_block_pp0_stage5_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0)) or ((img_data_empty_n = ap_const_logic_0) and (icmp_ln29_reg_169 = ap_const_lv1_1))));
    end process;

        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage6_01001_assign_proc : process(ap_enable_reg_pp0_iter0, cacheBuff_i_full_n, icmp_ln29_reg_169)
    begin
                ap_block_pp0_stage6_01001 <= ((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage6_11001_assign_proc : process(ap_enable_reg_pp0_iter0, cacheBuff_i_full_n, icmp_ln29_reg_169)
    begin
                ap_block_pp0_stage6_11001 <= ((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage6_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, cacheBuff_i_full_n, icmp_ln29_reg_169)
    begin
                ap_block_pp0_stage6_subdone <= ((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage7_01001_assign_proc : process(ap_enable_reg_pp0_iter0, cacheBuff_i_full_n, icmp_ln29_reg_169, img_data_empty_n)
    begin
                ap_block_pp0_stage7_01001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0)) or ((img_data_empty_n = ap_const_logic_0) and (icmp_ln29_reg_169 = ap_const_lv1_1))));
    end process;


    ap_block_pp0_stage7_11001_assign_proc : process(ap_enable_reg_pp0_iter0, cacheBuff_i_full_n, icmp_ln29_reg_169, img_data_empty_n)
    begin
                ap_block_pp0_stage7_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0)) or ((img_data_empty_n = ap_const_logic_0) and (icmp_ln29_reg_169 = ap_const_lv1_1))));
    end process;


    ap_block_pp0_stage7_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, cacheBuff_i_full_n, icmp_ln29_reg_169, img_data_empty_n)
    begin
                ap_block_pp0_stage7_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0)) or ((img_data_empty_n = ap_const_logic_0) and (icmp_ln29_reg_169 = ap_const_lv1_1))));
    end process;

        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage8_01001_assign_proc : process(ap_enable_reg_pp0_iter0, cacheBuff_i_full_n, icmp_ln29_reg_169, img_data_empty_n)
    begin
                ap_block_pp0_stage8_01001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0)) or ((img_data_empty_n = ap_const_logic_0) and (icmp_ln29_reg_169 = ap_const_lv1_1))));
    end process;


    ap_block_pp0_stage8_11001_assign_proc : process(ap_enable_reg_pp0_iter0, cacheBuff_i_full_n, icmp_ln29_reg_169, img_data_empty_n)
    begin
                ap_block_pp0_stage8_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0)) or ((img_data_empty_n = ap_const_logic_0) and (icmp_ln29_reg_169 = ap_const_lv1_1))));
    end process;


    ap_block_pp0_stage8_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, cacheBuff_i_full_n, icmp_ln29_reg_169, img_data_empty_n)
    begin
                ap_block_pp0_stage8_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0)) or ((img_data_empty_n = ap_const_logic_0) and (icmp_ln29_reg_169 = ap_const_lv1_1))));
    end process;

        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage9_01001_assign_proc : process(ap_enable_reg_pp0_iter0, cacheBuff_i_full_n, icmp_ln29_reg_169)
    begin
                ap_block_pp0_stage9_01001 <= ((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage9_11001_assign_proc : process(ap_enable_reg_pp0_iter0, cacheBuff_i_full_n, icmp_ln29_reg_169)
    begin
                ap_block_pp0_stage9_11001 <= ((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage9_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, cacheBuff_i_full_n, icmp_ln29_reg_169)
    begin
                ap_block_pp0_stage9_subdone <= ((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_state10_pp0_stage9_iter0_assign_proc : process(cacheBuff_i_full_n, icmp_ln29_reg_169)
    begin
                ap_block_state10_pp0_stage9_iter0 <= ((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0));
    end process;


    ap_block_state11_pp0_stage10_iter0_assign_proc : process(cacheBuff_i_full_n, icmp_ln29_reg_169)
    begin
                ap_block_state11_pp0_stage10_iter0 <= ((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0));
    end process;


    ap_block_state12_pp0_stage11_iter0_assign_proc : process(cacheBuff_i_full_n, icmp_ln29_reg_169)
    begin
                ap_block_state12_pp0_stage11_iter0 <= ((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0));
    end process;


    ap_block_state13_pp0_stage0_iter1_assign_proc : process(cacheBuff_i_full_n)
    begin
                ap_block_state13_pp0_stage0_iter1 <= (cacheBuff_i_full_n = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_done_reg = ap_const_logic_1);
    end process;


    ap_block_state2_pp0_stage1_iter0_assign_proc : process(cacheBuff_i_full_n, icmp_ln29_reg_169, img_data_empty_n)
    begin
                ap_block_state2_pp0_stage1_iter0 <= (((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0)) or ((img_data_empty_n = ap_const_logic_0) and (icmp_ln29_reg_169 = ap_const_lv1_1)));
    end process;


    ap_block_state3_pp0_stage2_iter0_assign_proc : process(cacheBuff_i_full_n, icmp_ln29_reg_169)
    begin
                ap_block_state3_pp0_stage2_iter0 <= ((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0));
    end process;


    ap_block_state4_pp0_stage3_iter0_assign_proc : process(cacheBuff_i_full_n, icmp_ln29_reg_169)
    begin
                ap_block_state4_pp0_stage3_iter0 <= ((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0));
    end process;


    ap_block_state5_pp0_stage4_iter0_assign_proc : process(cacheBuff_i_full_n, icmp_ln29_reg_169)
    begin
                ap_block_state5_pp0_stage4_iter0 <= ((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0));
    end process;


    ap_block_state6_pp0_stage5_iter0_assign_proc : process(cacheBuff_i_full_n, icmp_ln29_reg_169, img_data_empty_n)
    begin
                ap_block_state6_pp0_stage5_iter0 <= (((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0)) or ((img_data_empty_n = ap_const_logic_0) and (icmp_ln29_reg_169 = ap_const_lv1_1)));
    end process;


    ap_block_state7_pp0_stage6_iter0_assign_proc : process(cacheBuff_i_full_n, icmp_ln29_reg_169)
    begin
                ap_block_state7_pp0_stage6_iter0 <= ((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0));
    end process;


    ap_block_state8_pp0_stage7_iter0_assign_proc : process(cacheBuff_i_full_n, icmp_ln29_reg_169, img_data_empty_n)
    begin
                ap_block_state8_pp0_stage7_iter0 <= (((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0)) or ((img_data_empty_n = ap_const_logic_0) and (icmp_ln29_reg_169 = ap_const_lv1_1)));
    end process;


    ap_block_state9_pp0_stage8_iter0_assign_proc : process(cacheBuff_i_full_n, icmp_ln29_reg_169, img_data_empty_n)
    begin
                ap_block_state9_pp0_stage8_iter0 <= (((icmp_ln29_reg_169 = ap_const_lv1_1) and (cacheBuff_i_full_n = ap_const_logic_0)) or ((img_data_empty_n = ap_const_logic_0) and (icmp_ln29_reg_169 = ap_const_lv1_1)));
    end process;


    ap_condition_525_assign_proc : process(ap_CS_fsm_pp0_stage11, icmp_ln29_reg_169, ap_block_pp0_stage11_11001)
    begin
                ap_condition_525 <= ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11));
    end process;


    ap_condition_529_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_loop_init)
    begin
                ap_condition_529 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln29_fu_127_p2)
    begin
        if (((icmp_ln29_fu_127_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_done_reg, ap_block_pp0_stage0_subdone, ap_loop_exit_ready)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage11_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_col_2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, col_fu_56, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_col_2 <= ap_const_lv12_0;
        else 
            ap_sig_allocacmp_col_2 <= col_fu_56;
        end if; 
    end process;


    cacheBuff_i_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, cacheBuff_i_full_n, ap_CS_fsm_pp0_stage11, icmp_ln29_reg_169, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_block_pp0_stage11, ap_block_pp0_stage0)
    begin
        if ((((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 
    = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) 
    and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            cacheBuff_i_blk_n <= cacheBuff_i_full_n;
        else 
            cacheBuff_i_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    cacheBuff_i_din_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage11, icmp_ln29_reg_169, img_data_dout, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, reg_101, reg_106, trunc_ln38_reg_173, trunc_ln34_fu_133_p1, ap_block_pp0_stage1_01001, ap_block_pp0_stage2_01001, ap_block_pp0_stage3_01001, ap_block_pp0_stage4_01001, ap_block_pp0_stage5_01001, ap_block_pp0_stage6_01001, trunc_ln36_fu_138_p1, ap_block_pp0_stage7_01001, ap_block_pp0_stage8_01001, ap_block_pp0_stage9_01001, ap_block_pp0_stage10_01001, ap_block_pp0_stage11_01001, ap_block_pp0_stage0_01001)
    begin
        if (((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage10_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            cacheBuff_i_din <= trunc_ln38_reg_173;
        elsif (((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            cacheBuff_i_din <= trunc_ln36_fu_138_p1;
        elsif (((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            cacheBuff_i_din <= img_data_dout(15 downto 8);
        elsif ((((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage8_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            cacheBuff_i_din <= ap_const_lv8_0;
        elsif ((((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage9_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            cacheBuff_i_din <= reg_106;
        elsif ((((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage11_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            cacheBuff_i_din <= reg_101;
        elsif (((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            cacheBuff_i_din <= trunc_ln34_fu_133_p1;
        else 
            cacheBuff_i_din <= "XXXXXXXX";
        end if; 
    end process;


    cacheBuff_i_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage11, icmp_ln29_reg_169, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage1_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage10_11001)
    begin
        if ((((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) 
    and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = 
    ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            cacheBuff_i_write <= ap_const_logic_1;
        else 
            cacheBuff_i_write <= ap_const_logic_0;
        end if; 
    end process;

    col_3_fu_147_p2 <= std_logic_vector(unsigned(col_2_reg_164) + unsigned(ap_const_lv12_4));
    icmp_ln29_fu_127_p2 <= "1" when (unsigned(ap_sig_allocacmp_col_2) < unsigned(p_read_cast_cast_cast_cast_cast_fu_115_p1)) else "0";

    img_data_blk_n_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln29_reg_169, img_data_empty_n, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8)
    begin
        if ((((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            img_data_blk_n <= img_data_empty_n;
        else 
            img_data_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_data_read_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln29_reg_169, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage1_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage7_11001)
    begin
        if ((((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((icmp_ln29_reg_169 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            img_data_read <= ap_const_logic_1;
        else 
            img_data_read <= ap_const_logic_0;
        end if; 
    end process;

    p_read_cast_cast_cast_cast_cast_fu_115_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read_cast_cast_cast_cast_fu_111_p1),12));
        p_read_cast_cast_cast_cast_fu_111_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_read),11));

    trunc_ln34_fu_133_p1 <= img_data_dout(8 - 1 downto 0);
    trunc_ln36_fu_138_p1 <= img_data_dout(8 - 1 downto 0);
    trunc_ln38_fu_143_p1 <= img_data_dout(8 - 1 downto 0);
end behav;
