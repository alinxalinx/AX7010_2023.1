-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mem2stream_readmem4 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    pMemPort : IN STD_LOGIC_VECTOR (63 downto 0);
    p_read : IN STD_LOGIC_VECTOR (29 downto 0);
    row : IN STD_LOGIC_VECTOR (10 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (10 downto 0);
    cacheBuff_i_i_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    cacheBuff_i_i_num_data_valid : IN STD_LOGIC_VECTOR (12 downto 0);
    cacheBuff_i_i_fifo_cap : IN STD_LOGIC_VECTOR (12 downto 0);
    cacheBuff_i_i_full_n : IN STD_LOGIC;
    cacheBuff_i_i_write : OUT STD_LOGIC;
    p_read2 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of mem2stream_readmem4 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (23 downto 0) := "000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (23 downto 0) := "000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (23 downto 0) := "000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (23 downto 0) := "000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (23 downto 0) := "000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (23 downto 0) := "000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (23 downto 0) := "000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (23 downto 0) := "000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (23 downto 0) := "000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (23 downto 0) := "001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (23 downto 0) := "010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (23 downto 0) := "100000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal cache_len : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal gmem_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_1_reg_429 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal trunc_ln32_1_reg_434 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln32_2_reg_439 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal line_len_cast_i_fu_248_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal line_len_cast_i_reg_456 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln7_fu_288_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln7_reg_462 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln21_fu_294_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln9_fu_300_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln9_reg_471 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln9_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln9_reg_476 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln11_fu_312_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal sub_ln11_reg_480 : STD_LOGIC_VECTOR (29 downto 0);
    signal icmp_ln11_fu_318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln11_reg_487 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln11_fu_331_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal zext_ln11_reg_491 : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal zext_ln11_1_fu_335_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln11_1_reg_496 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln15_fu_153_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln15_reg_502 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_cast_i_reg_507 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_cast3_i_reg_513 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_readmem4_Pipeline_2_fu_133_ap_start : STD_LOGIC;
    signal grp_readmem4_Pipeline_2_fu_133_ap_done : STD_LOGIC;
    signal grp_readmem4_Pipeline_2_fu_133_ap_idle : STD_LOGIC;
    signal grp_readmem4_Pipeline_2_fu_133_ap_ready : STD_LOGIC;
    signal grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_readmem4_Pipeline_2_fu_133_cacheBuff_i_i_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_readmem4_Pipeline_2_fu_133_cacheBuff_i_i_write : STD_LOGIC;
    signal grp_readmem4_Pipeline_1_fu_143_ap_start : STD_LOGIC;
    signal grp_readmem4_Pipeline_1_fu_143_ap_done : STD_LOGIC;
    signal grp_readmem4_Pipeline_1_fu_143_ap_idle : STD_LOGIC;
    signal grp_readmem4_Pipeline_1_fu_143_ap_ready : STD_LOGIC;
    signal grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_readmem4_Pipeline_1_fu_143_cacheBuff_i_i_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_readmem4_Pipeline_1_fu_143_cacheBuff_i_i_write : STD_LOGIC;
    signal ap_phi_mux_storemerge_i_phi_fu_127_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal storemerge_i_reg_124 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_predicate_op95_call_state14 : BOOLEAN;
    signal ap_block_state14_on_subcall_done : BOOLEAN;
    signal grp_readmem4_Pipeline_2_fu_133_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_readmem4_Pipeline_1_fu_143_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal p_cast3_cast_i_fu_403_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast_cast_i_fu_419_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln15_fu_153_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln15_fu_153_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_fu_157_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_157_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln32_fu_165_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln31_fu_173_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln31_fu_173_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln32_fu_169_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln31_fu_177_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln32_fu_181_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln32_1_fu_195_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln32_1_fu_221_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal zext_ln32_1_fu_224_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln32_2_fu_234_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal sub_ln32_2_fu_228_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln32_2_fu_237_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal line_len_fu_241_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln7_2_fu_276_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal shl_ln7_fu_268_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_cast3_i_fu_256_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal rows_cast4_i_fu_252_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln7_1_fu_280_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal trunc_ln7_fu_264_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln11_fu_328_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln11_fu_328_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_338_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_2_fu_338_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_cast5_i_cast_fu_345_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_cast5_i_cast_cast_fu_349_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_fu_353_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln15_cast_i_fu_368_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal empty_37_fu_371_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_3_fu_376_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_3_cast_fu_384_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_38_fu_388_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_block_state24_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal mul_ln15_fu_153_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component mem2stream_readmem4_Pipeline_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        cacheBuff_i_i_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        cacheBuff_i_i_num_data_valid : IN STD_LOGIC_VECTOR (12 downto 0);
        cacheBuff_i_i_fifo_cap : IN STD_LOGIC_VECTOR (12 downto 0);
        cacheBuff_i_i_full_n : IN STD_LOGIC;
        cacheBuff_i_i_write : OUT STD_LOGIC;
        p_cast3_cast_i : IN STD_LOGIC_VECTOR (61 downto 0);
        sub_ln11 : IN STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component mem2stream_readmem4_Pipeline_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        cacheBuff_i_i_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        cacheBuff_i_i_num_data_valid : IN STD_LOGIC_VECTOR (12 downto 0);
        cacheBuff_i_i_fifo_cap : IN STD_LOGIC_VECTOR (12 downto 0);
        cacheBuff_i_i_full_n : IN STD_LOGIC;
        cacheBuff_i_i_write : OUT STD_LOGIC;
        p_cast_cast_i : IN STD_LOGIC_VECTOR (61 downto 0);
        sub_ln11 : IN STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component mem2stream_mul_31s_12ns_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (30 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_readmem4_Pipeline_2_fu_133 : component mem2stream_readmem4_Pipeline_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_readmem4_Pipeline_2_fu_133_ap_start,
        ap_done => grp_readmem4_Pipeline_2_fu_133_ap_done,
        ap_idle => grp_readmem4_Pipeline_2_fu_133_ap_idle,
        ap_ready => grp_readmem4_Pipeline_2_fu_133_ap_ready,
        m_axi_gmem_AWVALID => grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR => grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => m_axi_gmem_RVALID,
        m_axi_gmem_RREADY => grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => m_axi_gmem_RDATA,
        m_axi_gmem_RLAST => m_axi_gmem_RLAST,
        m_axi_gmem_RID => m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM => m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER => m_axi_gmem_RUSER,
        m_axi_gmem_RRESP => m_axi_gmem_RRESP,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        cacheBuff_i_i_din => grp_readmem4_Pipeline_2_fu_133_cacheBuff_i_i_din,
        cacheBuff_i_i_num_data_valid => ap_const_lv13_0,
        cacheBuff_i_i_fifo_cap => ap_const_lv13_0,
        cacheBuff_i_i_full_n => cacheBuff_i_i_full_n,
        cacheBuff_i_i_write => grp_readmem4_Pipeline_2_fu_133_cacheBuff_i_i_write,
        p_cast3_cast_i => p_cast3_i_reg_513,
        sub_ln11 => sub_ln11_reg_480);

    grp_readmem4_Pipeline_1_fu_143 : component mem2stream_readmem4_Pipeline_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_readmem4_Pipeline_1_fu_143_ap_start,
        ap_done => grp_readmem4_Pipeline_1_fu_143_ap_done,
        ap_idle => grp_readmem4_Pipeline_1_fu_143_ap_idle,
        ap_ready => grp_readmem4_Pipeline_1_fu_143_ap_ready,
        m_axi_gmem_AWVALID => grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR => grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => m_axi_gmem_RVALID,
        m_axi_gmem_RREADY => grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => m_axi_gmem_RDATA,
        m_axi_gmem_RLAST => m_axi_gmem_RLAST,
        m_axi_gmem_RID => m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM => m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER => m_axi_gmem_RUSER,
        m_axi_gmem_RRESP => m_axi_gmem_RRESP,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        cacheBuff_i_i_din => grp_readmem4_Pipeline_1_fu_143_cacheBuff_i_i_din,
        cacheBuff_i_i_num_data_valid => ap_const_lv13_0,
        cacheBuff_i_i_fifo_cap => ap_const_lv13_0,
        cacheBuff_i_i_full_n => cacheBuff_i_i_full_n,
        cacheBuff_i_i_write => grp_readmem4_Pipeline_1_fu_143_cacheBuff_i_i_write,
        p_cast_cast_i => p_cast_i_reg_507,
        sub_ln11 => sub_ln11_reg_480);

    mul_31s_12ns_32_1_1_U12 : component mem2stream_mul_31s_12ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 12,
        dout_WIDTH => 32)
    port map (
        din0 => mul_ln15_fu_153_p0,
        din1 => mul_ln15_fu_153_p1,
        dout => mul_ln15_fu_153_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_state14_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_readmem4_Pipeline_1_fu_143_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_readmem4_Pipeline_1_fu_143_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                    grp_readmem4_Pipeline_1_fu_143_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_readmem4_Pipeline_1_fu_143_ap_ready = ap_const_logic_1)) then 
                    grp_readmem4_Pipeline_1_fu_143_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_readmem4_Pipeline_2_fu_133_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_readmem4_Pipeline_2_fu_133_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    grp_readmem4_Pipeline_2_fu_133_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_readmem4_Pipeline_2_fu_133_ap_ready = ap_const_logic_1)) then 
                    grp_readmem4_Pipeline_2_fu_133_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    storemerge_i_reg_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state14_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln7_reg_462 = ap_const_lv1_1))) then 
                storemerge_i_reg_124 <= line_len_cast_i_reg_456;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln7_fu_288_p2 = ap_const_lv1_0))) then 
                storemerge_i_reg_124 <= sub_ln21_fu_294_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln7_fu_288_p2 = ap_const_lv1_1))) then
                add_ln9_reg_471 <= add_ln9_fu_300_p2;
                icmp_ln11_reg_487 <= icmp_ln11_fu_318_p2;
                icmp_ln9_reg_476 <= icmp_ln9_fu_306_p2;
                sub_ln11_reg_480 <= sub_ln11_fu_312_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state14_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                cache_len <= ap_phi_mux_storemerge_i_phi_fu_127_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                icmp_ln7_reg_462 <= icmp_ln7_fu_288_p2;
                line_len_cast_i_reg_456 <= line_len_cast_i_fu_248_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln9_reg_476 = ap_const_lv1_0))) then
                mul_ln15_reg_502 <= mul_ln15_fu_153_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                p_cast3_i_reg_513 <= empty_38_fu_388_p2(63 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln11_reg_487 = ap_const_lv1_1) and (icmp_ln9_reg_476 = ap_const_lv1_1))) then
                p_cast_i_reg_507 <= empty_fu_353_p2(63 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                tmp_1_reg_429 <= sub_ln32_fu_181_p2(13 downto 13);
                trunc_ln32_1_reg_434 <= sub_ln32_1_fu_195_p2(13 downto 2);
                trunc_ln32_2_reg_439 <= sub_ln32_fu_181_p2(13 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                    zext_ln11_1_reg_496(29 downto 0) <= zext_ln11_1_fu_335_p1(29 downto 0);
                    zext_ln11_reg_491(31 downto 0) <= zext_ln11_fu_331_p1(31 downto 0);
            end if;
        end if;
    end process;
    zext_ln11_reg_491(33 downto 32) <= "00";
    zext_ln11_1_reg_496(31 downto 30) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, m_axi_gmem_ARREADY, ap_CS_fsm_state15, ap_CS_fsm_state5, ap_CS_fsm_state2, icmp_ln7_fu_288_p2, icmp_ln9_reg_476, icmp_ln11_reg_487, ap_CS_fsm_state3, ap_CS_fsm_state14, ap_block_state14_on_subcall_done, ap_CS_fsm_state24, ap_block_state24_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln7_fu_288_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln11_reg_487 = ap_const_lv1_0) and (icmp_ln9_reg_476 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln11_reg_487 = ap_const_lv1_1) and (icmp_ln9_reg_476 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln11_reg_487 = ap_const_lv1_0) and (icmp_ln9_reg_476 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((m_axi_gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((ap_const_boolean_0 = ap_block_state14_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                if (((m_axi_gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                if (((ap_const_boolean_0 = ap_block_state24_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln9_fu_300_p2 <= std_logic_vector(unsigned(row_cast3_i_fu_256_p1) + unsigned(ap_const_lv12_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;

    ap_ST_fsm_state14_blk_assign_proc : process(ap_block_state14_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state14_on_subcall_done)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state15_blk_assign_proc : process(m_axi_gmem_ARREADY)
    begin
        if ((m_axi_gmem_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg)
    begin
        if (((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;

    ap_ST_fsm_state24_blk_assign_proc : process(ap_block_state24_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state24_on_subcall_done)) then 
            ap_ST_fsm_state24_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state24_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(m_axi_gmem_ARREADY)
    begin
        if ((m_axi_gmem_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state14_on_subcall_done_assign_proc : process(grp_readmem4_Pipeline_2_fu_133_ap_done, ap_predicate_op95_call_state14)
    begin
                ap_block_state14_on_subcall_done <= ((ap_predicate_op95_call_state14 = ap_const_boolean_1) and (grp_readmem4_Pipeline_2_fu_133_ap_done = ap_const_logic_0));
    end process;


    ap_block_state24_on_subcall_done_assign_proc : process(icmp_ln11_reg_487, grp_readmem4_Pipeline_1_fu_143_ap_done)
    begin
                ap_block_state24_on_subcall_done <= ((grp_readmem4_Pipeline_1_fu_143_ap_done = ap_const_logic_0) and (icmp_ln11_reg_487 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state14, ap_block_state14_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state14_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_storemerge_i_phi_fu_127_p4_assign_proc : process(line_len_cast_i_reg_456, icmp_ln7_reg_462, storemerge_i_reg_124, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln7_reg_462 = ap_const_lv1_1))) then 
            ap_phi_mux_storemerge_i_phi_fu_127_p4 <= line_len_cast_i_reg_456;
        else 
            ap_phi_mux_storemerge_i_phi_fu_127_p4 <= storemerge_i_reg_124;
        end if; 
    end process;


    ap_predicate_op95_call_state14_assign_proc : process(icmp_ln7_reg_462, icmp_ln9_reg_476, icmp_ln11_reg_487)
    begin
                ap_predicate_op95_call_state14 <= ((icmp_ln11_reg_487 = ap_const_lv1_1) and (icmp_ln9_reg_476 = ap_const_lv1_0) and (icmp_ln7_reg_462 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state14, ap_block_state14_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state14_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    cacheBuff_i_i_din_assign_proc : process(icmp_ln11_reg_487, grp_readmem4_Pipeline_2_fu_133_cacheBuff_i_i_din, grp_readmem4_Pipeline_1_fu_143_cacheBuff_i_i_din, ap_CS_fsm_state14, ap_predicate_op95_call_state14, ap_CS_fsm_state24)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln11_reg_487 = ap_const_lv1_1))) then 
            cacheBuff_i_i_din <= grp_readmem4_Pipeline_1_fu_143_cacheBuff_i_i_din;
        elsif (((ap_predicate_op95_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            cacheBuff_i_i_din <= grp_readmem4_Pipeline_2_fu_133_cacheBuff_i_i_din;
        else 
            cacheBuff_i_i_din <= grp_readmem4_Pipeline_1_fu_143_cacheBuff_i_i_din;
        end if; 
    end process;


    cacheBuff_i_i_write_assign_proc : process(icmp_ln11_reg_487, grp_readmem4_Pipeline_2_fu_133_cacheBuff_i_i_write, grp_readmem4_Pipeline_1_fu_143_cacheBuff_i_i_write, ap_CS_fsm_state14, ap_predicate_op95_call_state14, ap_CS_fsm_state24)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln11_reg_487 = ap_const_lv1_1))) then 
            cacheBuff_i_i_write <= grp_readmem4_Pipeline_1_fu_143_cacheBuff_i_i_write;
        elsif (((ap_predicate_op95_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            cacheBuff_i_i_write <= grp_readmem4_Pipeline_2_fu_133_cacheBuff_i_i_write;
        else 
            cacheBuff_i_i_write <= ap_const_logic_0;
        end if; 
    end process;

    empty_37_fu_371_p2 <= std_logic_vector(signed(mul_ln15_cast_i_fu_368_p1) + signed(zext_ln11_reg_491));
    empty_38_fu_388_p2 <= std_logic_vector(signed(tmp_3_cast_fu_384_p1) + signed(pMemPort));
    empty_fu_353_p2 <= std_logic_vector(unsigned(p_cast5_i_cast_cast_fu_349_p1) + unsigned(pMemPort));

    gmem_blk_n_AR_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_state15, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;

    grp_readmem4_Pipeline_1_fu_143_ap_start <= grp_readmem4_Pipeline_1_fu_143_ap_start_reg;
    grp_readmem4_Pipeline_2_fu_133_ap_start <= grp_readmem4_Pipeline_2_fu_133_ap_start_reg;
    icmp_ln11_fu_318_p2 <= "0" when (trunc_ln7_1_fu_280_p3 = trunc_ln7_fu_264_p1) else "1";
    icmp_ln7_fu_288_p2 <= "1" when (unsigned(cache_len) < unsigned(shl_ln7_fu_268_p3)) else "0";
    icmp_ln9_fu_306_p2 <= "1" when (add_ln9_fu_300_p2 = rows_cast4_i_fu_252_p1) else "0";
        line_len_cast_i_fu_248_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(line_len_fu_241_p3),32));

    line_len_fu_241_p3 <= 
        sub_ln32_2_fu_228_p2 when (tmp_1_reg_429(0) = '1') else 
        zext_ln32_2_fu_237_p1;

    m_axi_gmem_ARADDR_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_state15, ap_CS_fsm_state5, icmp_ln11_reg_487, grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARADDR, grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARADDR, ap_CS_fsm_state14, ap_predicate_op95_call_state14, ap_CS_fsm_state13, ap_CS_fsm_state23, ap_CS_fsm_state24, p_cast3_cast_i_fu_403_p1, p_cast_cast_i_fu_419_p1)
    begin
        if (((m_axi_gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            m_axi_gmem_ARADDR <= p_cast_cast_i_fu_419_p1;
        elsif (((m_axi_gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            m_axi_gmem_ARADDR <= p_cast3_cast_i_fu_403_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln11_reg_487 = ap_const_lv1_1)))) then 
            m_axi_gmem_ARADDR <= grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or ((ap_predicate_op95_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            m_axi_gmem_ARADDR <= grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARADDR;
        else 
            m_axi_gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem_ARBURST_assign_proc : process(icmp_ln11_reg_487, grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARBURST, grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARBURST, ap_CS_fsm_state14, ap_predicate_op95_call_state14, ap_CS_fsm_state13, ap_CS_fsm_state23, ap_CS_fsm_state24)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln11_reg_487 = ap_const_lv1_1)))) then 
            m_axi_gmem_ARBURST <= grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARBURST;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or ((ap_predicate_op95_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            m_axi_gmem_ARBURST <= grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARBURST;
        else 
            m_axi_gmem_ARBURST <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_gmem_ARCACHE_assign_proc : process(icmp_ln11_reg_487, grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARCACHE, grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARCACHE, ap_CS_fsm_state14, ap_predicate_op95_call_state14, ap_CS_fsm_state13, ap_CS_fsm_state23, ap_CS_fsm_state24)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln11_reg_487 = ap_const_lv1_1)))) then 
            m_axi_gmem_ARCACHE <= grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARCACHE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or ((ap_predicate_op95_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            m_axi_gmem_ARCACHE <= grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARCACHE;
        else 
            m_axi_gmem_ARCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem_ARID_assign_proc : process(icmp_ln11_reg_487, grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARID, grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARID, ap_CS_fsm_state14, ap_predicate_op95_call_state14, ap_CS_fsm_state13, ap_CS_fsm_state23, ap_CS_fsm_state24)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln11_reg_487 = ap_const_lv1_1)))) then 
            m_axi_gmem_ARID <= grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or ((ap_predicate_op95_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            m_axi_gmem_ARID <= grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARID;
        else 
            m_axi_gmem_ARID <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_gmem_ARLEN_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_state15, ap_CS_fsm_state5, icmp_ln11_reg_487, zext_ln11_1_reg_496, grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARLEN, grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARLEN, ap_CS_fsm_state14, ap_predicate_op95_call_state14, ap_CS_fsm_state13, ap_CS_fsm_state23, ap_CS_fsm_state24)
    begin
        if ((((m_axi_gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((m_axi_gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            m_axi_gmem_ARLEN <= zext_ln11_1_reg_496;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln11_reg_487 = ap_const_lv1_1)))) then 
            m_axi_gmem_ARLEN <= grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or ((ap_predicate_op95_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            m_axi_gmem_ARLEN <= grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARLEN;
        else 
            m_axi_gmem_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem_ARLOCK_assign_proc : process(icmp_ln11_reg_487, grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARLOCK, grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARLOCK, ap_CS_fsm_state14, ap_predicate_op95_call_state14, ap_CS_fsm_state13, ap_CS_fsm_state23, ap_CS_fsm_state24)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln11_reg_487 = ap_const_lv1_1)))) then 
            m_axi_gmem_ARLOCK <= grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARLOCK;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or ((ap_predicate_op95_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            m_axi_gmem_ARLOCK <= grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARLOCK;
        else 
            m_axi_gmem_ARLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_gmem_ARPROT_assign_proc : process(icmp_ln11_reg_487, grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARPROT, grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARPROT, ap_CS_fsm_state14, ap_predicate_op95_call_state14, ap_CS_fsm_state13, ap_CS_fsm_state23, ap_CS_fsm_state24)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln11_reg_487 = ap_const_lv1_1)))) then 
            m_axi_gmem_ARPROT <= grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARPROT;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or ((ap_predicate_op95_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            m_axi_gmem_ARPROT <= grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARPROT;
        else 
            m_axi_gmem_ARPROT <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_gmem_ARQOS_assign_proc : process(icmp_ln11_reg_487, grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARQOS, grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARQOS, ap_CS_fsm_state14, ap_predicate_op95_call_state14, ap_CS_fsm_state13, ap_CS_fsm_state23, ap_CS_fsm_state24)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln11_reg_487 = ap_const_lv1_1)))) then 
            m_axi_gmem_ARQOS <= grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARQOS;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or ((ap_predicate_op95_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            m_axi_gmem_ARQOS <= grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARQOS;
        else 
            m_axi_gmem_ARQOS <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem_ARREGION_assign_proc : process(icmp_ln11_reg_487, grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARREGION, grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARREGION, ap_CS_fsm_state14, ap_predicate_op95_call_state14, ap_CS_fsm_state13, ap_CS_fsm_state23, ap_CS_fsm_state24)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln11_reg_487 = ap_const_lv1_1)))) then 
            m_axi_gmem_ARREGION <= grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARREGION;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or ((ap_predicate_op95_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            m_axi_gmem_ARREGION <= grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARREGION;
        else 
            m_axi_gmem_ARREGION <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem_ARSIZE_assign_proc : process(icmp_ln11_reg_487, grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARSIZE, grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARSIZE, ap_CS_fsm_state14, ap_predicate_op95_call_state14, ap_CS_fsm_state13, ap_CS_fsm_state23, ap_CS_fsm_state24)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln11_reg_487 = ap_const_lv1_1)))) then 
            m_axi_gmem_ARSIZE <= grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARSIZE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or ((ap_predicate_op95_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            m_axi_gmem_ARSIZE <= grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARSIZE;
        else 
            m_axi_gmem_ARSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_gmem_ARUSER_assign_proc : process(icmp_ln11_reg_487, grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARUSER, grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARUSER, ap_CS_fsm_state14, ap_predicate_op95_call_state14, ap_CS_fsm_state13, ap_CS_fsm_state23, ap_CS_fsm_state24)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln11_reg_487 = ap_const_lv1_1)))) then 
            m_axi_gmem_ARUSER <= grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARUSER;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or ((ap_predicate_op95_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            m_axi_gmem_ARUSER <= grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARUSER;
        else 
            m_axi_gmem_ARUSER <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_gmem_ARVALID_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_state15, ap_CS_fsm_state5, icmp_ln11_reg_487, grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARVALID, grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARVALID, ap_CS_fsm_state14, ap_predicate_op95_call_state14, ap_CS_fsm_state13, ap_CS_fsm_state23, ap_CS_fsm_state24)
    begin
        if ((((m_axi_gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((m_axi_gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            m_axi_gmem_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln11_reg_487 = ap_const_lv1_1)))) then 
            m_axi_gmem_ARVALID <= grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or ((ap_predicate_op95_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            m_axi_gmem_ARVALID <= grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_ARVALID;
        else 
            m_axi_gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_AWADDR <= ap_const_lv64_0;
    m_axi_gmem_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_AWID <= ap_const_lv1_0;
    m_axi_gmem_AWLEN <= ap_const_lv32_0;
    m_axi_gmem_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_AWUSER <= ap_const_lv1_0;
    m_axi_gmem_AWVALID <= ap_const_logic_0;
    m_axi_gmem_BREADY <= ap_const_logic_0;

    m_axi_gmem_RREADY_assign_proc : process(icmp_ln11_reg_487, grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_RREADY, grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_RREADY, ap_CS_fsm_state14, ap_predicate_op95_call_state14, ap_CS_fsm_state13, ap_CS_fsm_state23, ap_CS_fsm_state24)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln11_reg_487 = ap_const_lv1_1)))) then 
            m_axi_gmem_RREADY <= grp_readmem4_Pipeline_1_fu_143_m_axi_gmem_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or ((ap_predicate_op95_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            m_axi_gmem_RREADY <= grp_readmem4_Pipeline_2_fu_133_m_axi_gmem_RREADY;
        else 
            m_axi_gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_WDATA <= ap_const_lv32_0;
    m_axi_gmem_WID <= ap_const_lv1_0;
    m_axi_gmem_WLAST <= ap_const_logic_0;
    m_axi_gmem_WSTRB <= ap_const_lv4_0;
    m_axi_gmem_WUSER <= ap_const_lv1_0;
    m_axi_gmem_WVALID <= ap_const_logic_0;
        mul_ln15_cast_i_fu_368_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln15_reg_502),34));

    mul_ln15_fu_153_p0 <= line_len_cast_i_reg_456(31 - 1 downto 0);
    mul_ln15_fu_153_p1 <= mul_ln15_fu_153_p10(12 - 1 downto 0);
    mul_ln15_fu_153_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln9_reg_471),32));
        p_cast3_cast_i_fu_403_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast3_i_reg_513),64));

    p_cast5_i_cast_cast_fu_349_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast5_i_cast_fu_345_p1),64));
        p_cast5_i_cast_fu_345_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_fu_338_p3),34));

        p_cast_cast_i_fu_419_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast_i_reg_507),64));

    row_cast3_i_fu_256_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(row),12));
    rows_cast4_i_fu_252_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read1),12));
    sext_ln11_fu_328_p0 <= p_read;
        sext_ln11_fu_328_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln11_fu_328_p0),32));

    sext_ln31_fu_173_p0 <= p_read2;
        sext_ln31_fu_173_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln31_fu_173_p0),11));

        sext_ln32_1_fu_221_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln32_1_reg_434),30));

        sext_ln32_2_fu_234_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln32_2_reg_439),30));

        sext_ln32_fu_165_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_157_p3),13));

    shl_ln7_fu_268_p3 <= (line_len_fu_241_p3 & ap_const_lv1_0);
    sub_ln11_fu_312_p2 <= std_logic_vector(unsigned(trunc_ln7_1_fu_280_p3) - unsigned(trunc_ln7_fu_264_p1));
    sub_ln21_fu_294_p2 <= std_logic_vector(unsigned(cache_len) - unsigned(line_len_cast_i_fu_248_p1));
    sub_ln32_1_fu_195_p2 <= std_logic_vector(unsigned(ap_const_lv14_0) - unsigned(sub_ln32_fu_181_p2));
    sub_ln32_2_fu_228_p2 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(zext_ln32_1_fu_224_p1));
    sub_ln32_fu_181_p2 <= std_logic_vector(unsigned(zext_ln32_fu_169_p1) - unsigned(zext_ln31_fu_177_p1));
    tmp_2_fu_338_p1 <= p_read;
    tmp_2_fu_338_p3 <= (tmp_2_fu_338_p1 & ap_const_lv2_0);
        tmp_3_cast_fu_384_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_3_fu_376_p3),64));

    tmp_3_fu_376_p3 <= (empty_37_fu_371_p2 & ap_const_lv2_0);
    tmp_fu_157_p1 <= p_read2;
    tmp_fu_157_p3 <= (tmp_fu_157_p1 & ap_const_lv2_0);
    trunc_ln7_1_fu_280_p3 <= (trunc_ln7_2_fu_276_p1 & ap_const_lv1_0);
    trunc_ln7_2_fu_276_p1 <= line_len_fu_241_p3(29 - 1 downto 0);
    trunc_ln7_fu_264_p1 <= cache_len(30 - 1 downto 0);
    zext_ln11_1_fu_335_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln11_reg_480),32));
    zext_ln11_fu_331_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln11_fu_328_p1),34));
    zext_ln31_fu_177_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln31_fu_173_p1),14));
    zext_ln32_1_fu_224_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln32_1_fu_221_p1),31));
    zext_ln32_2_fu_237_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln32_2_fu_234_p1),31));
    zext_ln32_fu_169_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln32_fu_165_p1),14));
end behav;
