-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity edge_detector_thresholding_1080_1920_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    sobelImg_data_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    sobelImg_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    sobelImg_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    sobelImg_data_empty_n : IN STD_LOGIC;
    sobelImg_data_read : OUT STD_LOGIC;
    thresholdImg_data_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    thresholdImg_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    thresholdImg_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    thresholdImg_data_full_n : IN STD_LOGIC;
    thresholdImg_data_write : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of edge_detector_thresholding_1080_1920_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal ap_block_state1 : BOOLEAN;
    signal icmp_ln21_fu_49_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln21_reg_60 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4_fu_32_ap_start : STD_LOGIC;
    signal grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4_fu_32_ap_done : STD_LOGIC;
    signal grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4_fu_32_ap_idle : STD_LOGIC;
    signal grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4_fu_32_ap_ready : STD_LOGIC;
    signal grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4_fu_32_sobelImg_data_read : STD_LOGIC;
    signal grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4_fu_32_thresholdImg_data_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4_fu_32_thresholdImg_data_write : STD_LOGIC;
    signal grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41_ap_start : STD_LOGIC;
    signal grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41_ap_done : STD_LOGIC;
    signal grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41_ap_idle : STD_LOGIC;
    signal grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41_ap_ready : STD_LOGIC;
    signal grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41_sobelImg_data_read : STD_LOGIC;
    signal grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41_thresholdImg_data_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41_thresholdImg_data_write : STD_LOGIC;
    signal grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4_fu_32_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state3_on_subcall_done : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component edge_detector_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sobelImg_data_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        sobelImg_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        sobelImg_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        sobelImg_data_empty_n : IN STD_LOGIC;
        sobelImg_data_read : OUT STD_LOGIC;
        thresholdImg_data_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        thresholdImg_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        thresholdImg_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        thresholdImg_data_full_n : IN STD_LOGIC;
        thresholdImg_data_write : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component edge_detector_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sobelImg_data_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        sobelImg_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        sobelImg_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        sobelImg_data_empty_n : IN STD_LOGIC;
        sobelImg_data_read : OUT STD_LOGIC;
        thresholdImg_data_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        thresholdImg_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        thresholdImg_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        thresholdImg_data_full_n : IN STD_LOGIC;
        thresholdImg_data_write : OUT STD_LOGIC );
    end component;



begin
    grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4_fu_32 : component edge_detector_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4_fu_32_ap_start,
        ap_done => grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4_fu_32_ap_done,
        ap_idle => grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4_fu_32_ap_idle,
        ap_ready => grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4_fu_32_ap_ready,
        sobelImg_data_dout => sobelImg_data_dout,
        sobelImg_data_num_data_valid => ap_const_lv2_0,
        sobelImg_data_fifo_cap => ap_const_lv2_0,
        sobelImg_data_empty_n => sobelImg_data_empty_n,
        sobelImg_data_read => grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4_fu_32_sobelImg_data_read,
        thresholdImg_data_din => grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4_fu_32_thresholdImg_data_din,
        thresholdImg_data_num_data_valid => ap_const_lv2_0,
        thresholdImg_data_fifo_cap => ap_const_lv2_0,
        thresholdImg_data_full_n => thresholdImg_data_full_n,
        thresholdImg_data_write => grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4_fu_32_thresholdImg_data_write,
        p_read => p_read);

    grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41 : component edge_detector_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41_ap_start,
        ap_done => grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41_ap_done,
        ap_idle => grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41_ap_idle,
        ap_ready => grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41_ap_ready,
        sobelImg_data_dout => sobelImg_data_dout,
        sobelImg_data_num_data_valid => ap_const_lv2_0,
        sobelImg_data_fifo_cap => ap_const_lv2_0,
        sobelImg_data_empty_n => sobelImg_data_empty_n,
        sobelImg_data_read => grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41_sobelImg_data_read,
        thresholdImg_data_din => grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41_thresholdImg_data_din,
        thresholdImg_data_num_data_valid => ap_const_lv2_0,
        thresholdImg_data_fifo_cap => ap_const_lv2_0,
        thresholdImg_data_full_n => thresholdImg_data_full_n,
        thresholdImg_data_write => grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41_thresholdImg_data_write);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3_on_subcall_done))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln21_fu_49_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41_ap_ready = ap_const_logic_1)) then 
                    grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4_fu_32_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4_fu_32_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln21_fu_49_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4_fu_32_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4_fu_32_ap_ready = ap_const_logic_1)) then 
                    grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4_fu_32_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((real_start = ap_const_logic_1) and (internal_ap_ready = ap_const_logic_0))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                icmp_ln21_reg_60 <= icmp_ln21_fu_49_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_block_state3_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_ST_fsm_state1_blk_assign_proc : process(real_start, ap_done_reg)
    begin
        if (((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(ap_block_state3_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state3_on_subcall_done)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state3_on_subcall_done_assign_proc : process(icmp_ln21_reg_60, grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4_fu_32_ap_done, grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41_ap_done)
    begin
                ap_block_state3_on_subcall_done <= (((grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41_ap_done = ap_const_logic_0) and (icmp_ln21_reg_60 = ap_const_lv1_1)) or ((grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4_fu_32_ap_done = ap_const_logic_0) and (icmp_ln21_reg_60 = ap_const_lv1_0)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state3, ap_block_state3_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3_on_subcall_done))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41_ap_start <= grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41_ap_start_reg;
    grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4_fu_32_ap_start <= grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4_fu_32_ap_start_reg;
    icmp_ln21_fu_49_p2 <= "1" when (p_read = ap_const_lv8_0) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state3, ap_block_state3_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3_on_subcall_done))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    sobelImg_data_read_assign_proc : process(icmp_ln21_reg_60, grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4_fu_32_sobelImg_data_read, grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41_sobelImg_data_read, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((icmp_ln21_reg_60 = ap_const_lv1_1)) then 
                sobelImg_data_read <= grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41_sobelImg_data_read;
            elsif ((icmp_ln21_reg_60 = ap_const_lv1_0)) then 
                sobelImg_data_read <= grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4_fu_32_sobelImg_data_read;
            else 
                sobelImg_data_read <= ap_const_logic_0;
            end if;
        else 
            sobelImg_data_read <= ap_const_logic_0;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((real_start = ap_const_logic_1) and (start_once_reg = ap_const_logic_0))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;


    thresholdImg_data_din_assign_proc : process(icmp_ln21_reg_60, grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4_fu_32_thresholdImg_data_din, grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41_thresholdImg_data_din, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((icmp_ln21_reg_60 = ap_const_lv1_1)) then 
                thresholdImg_data_din <= grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41_thresholdImg_data_din;
            elsif ((icmp_ln21_reg_60 = ap_const_lv1_0)) then 
                thresholdImg_data_din <= grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4_fu_32_thresholdImg_data_din;
            else 
                thresholdImg_data_din <= grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41_thresholdImg_data_din;
            end if;
        else 
            thresholdImg_data_din <= grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41_thresholdImg_data_din;
        end if; 
    end process;


    thresholdImg_data_write_assign_proc : process(icmp_ln21_reg_60, grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4_fu_32_thresholdImg_data_write, grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41_thresholdImg_data_write, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((icmp_ln21_reg_60 = ap_const_lv1_1)) then 
                thresholdImg_data_write <= grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_25_2_fu_41_thresholdImg_data_write;
            elsif ((icmp_ln21_reg_60 = ap_const_lv1_0)) then 
                thresholdImg_data_write <= grp_thresholding_1080_1920_Pipeline_VITIS_LOOP_35_3_VITIS_LOOP_37_4_fu_32_thresholdImg_data_write;
            else 
                thresholdImg_data_write <= ap_const_logic_0;
            end if;
        else 
            thresholdImg_data_write <= ap_const_logic_0;
        end if; 
    end process;

end behav;
