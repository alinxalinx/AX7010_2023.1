-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mem2stream is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_CACHE_VALUE : INTEGER := 3 );
port (
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    interrupt : OUT STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BUSER_WIDTH-1 downto 0);
    vstream_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    vstream_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
    vstream_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
    vstream_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    vstream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    vstream_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    vstream_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    indexw : IN STD_LOGIC_VECTOR (31 downto 0);
    indexr : OUT STD_LOGIC_VECTOR (31 downto 0);
    vstream_TVALID : OUT STD_LOGIC;
    vstream_TREADY : IN STD_LOGIC );
end;


architecture behav of mem2stream is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "mem2stream_mem2stream,hls_ip_2023_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=12,HLS_SYN_DSP=0,HLS_SYN_FF=2828,HLS_SYN_LUT=3553,HLS_VERSION=2023_1}";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv11_438 : STD_LOGIC_VECTOR (10 downto 0) := "10000111000";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal pMemPort : STD_LOGIC_VECTOR (63 downto 0);
    signal rows : STD_LOGIC_VECTOR (31 downto 0);
    signal cols : STD_LOGIC_VECTOR (31 downto 0);
    signal baseAddr_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_start : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal gmem_AWREADY : STD_LOGIC;
    signal gmem_WREADY : STD_LOGIC;
    signal gmem_ARREADY : STD_LOGIC;
    signal gmem_RVALID : STD_LOGIC;
    signal gmem_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_RLAST : STD_LOGIC;
    signal gmem_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_BVALID : STD_LOGIC;
    signal mem2mat_1080_1920_U0_ap_start : STD_LOGIC;
    signal mem2mat_1080_1920_U0_ap_done : STD_LOGIC;
    signal mem2mat_1080_1920_U0_ap_continue : STD_LOGIC;
    signal mem2mat_1080_1920_U0_ap_idle : STD_LOGIC;
    signal mem2mat_1080_1920_U0_ap_ready : STD_LOGIC;
    signal mem2mat_1080_1920_U0_start_out : STD_LOGIC;
    signal mem2mat_1080_1920_U0_start_write : STD_LOGIC;
    signal mem2mat_1080_1920_U0_img_data_din : STD_LOGIC_VECTOR (23 downto 0);
    signal mem2mat_1080_1920_U0_img_data_write : STD_LOGIC;
    signal mem2mat_1080_1920_U0_m_axi_gmem_AWVALID : STD_LOGIC;
    signal mem2mat_1080_1920_U0_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal mem2mat_1080_1920_U0_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal mem2mat_1080_1920_U0_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal mem2mat_1080_1920_U0_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal mem2mat_1080_1920_U0_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal mem2mat_1080_1920_U0_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal mem2mat_1080_1920_U0_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal mem2mat_1080_1920_U0_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal mem2mat_1080_1920_U0_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal mem2mat_1080_1920_U0_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal mem2mat_1080_1920_U0_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal mem2mat_1080_1920_U0_m_axi_gmem_WVALID : STD_LOGIC;
    signal mem2mat_1080_1920_U0_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal mem2mat_1080_1920_U0_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal mem2mat_1080_1920_U0_m_axi_gmem_WLAST : STD_LOGIC;
    signal mem2mat_1080_1920_U0_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal mem2mat_1080_1920_U0_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal mem2mat_1080_1920_U0_m_axi_gmem_ARVALID : STD_LOGIC;
    signal mem2mat_1080_1920_U0_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal mem2mat_1080_1920_U0_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal mem2mat_1080_1920_U0_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal mem2mat_1080_1920_U0_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal mem2mat_1080_1920_U0_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal mem2mat_1080_1920_U0_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal mem2mat_1080_1920_U0_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal mem2mat_1080_1920_U0_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal mem2mat_1080_1920_U0_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal mem2mat_1080_1920_U0_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal mem2mat_1080_1920_U0_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal mem2mat_1080_1920_U0_m_axi_gmem_RREADY : STD_LOGIC;
    signal mem2mat_1080_1920_U0_m_axi_gmem_BREADY : STD_LOGIC;
    signal mem2mat_1080_1920_U0_baseAddr_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal mem2mat_1080_1920_U0_baseAddr_ce0 : STD_LOGIC;
    signal mem2mat_1080_1920_U0_indexr : STD_LOGIC_VECTOR (31 downto 0);
    signal mem2mat_1080_1920_U0_indexr_ap_vld : STD_LOGIC;
    signal mem2mat_1080_1920_U0_img_rows_c_din : STD_LOGIC_VECTOR (10 downto 0);
    signal mem2mat_1080_1920_U0_img_rows_c_write : STD_LOGIC;
    signal mem2mat_1080_1920_U0_img_cols_c_din : STD_LOGIC_VECTOR (7 downto 0);
    signal mem2mat_1080_1920_U0_img_cols_c_write : STD_LOGIC;
    signal xfMat2AXIvideo_24_16_1080_1920_1_2_U0_ap_start : STD_LOGIC;
    signal xfMat2AXIvideo_24_16_1080_1920_1_2_U0_ap_done : STD_LOGIC;
    signal xfMat2AXIvideo_24_16_1080_1920_1_2_U0_ap_continue : STD_LOGIC;
    signal xfMat2AXIvideo_24_16_1080_1920_1_2_U0_ap_idle : STD_LOGIC;
    signal xfMat2AXIvideo_24_16_1080_1920_1_2_U0_ap_ready : STD_LOGIC;
    signal xfMat2AXIvideo_24_16_1080_1920_1_2_U0_img_1_read : STD_LOGIC;
    signal xfMat2AXIvideo_24_16_1080_1920_1_2_U0_img_2_read : STD_LOGIC;
    signal xfMat2AXIvideo_24_16_1080_1920_1_2_U0_img_data_read : STD_LOGIC;
    signal xfMat2AXIvideo_24_16_1080_1920_1_2_U0_vstream_TDATA : STD_LOGIC_VECTOR (23 downto 0);
    signal xfMat2AXIvideo_24_16_1080_1920_1_2_U0_vstream_TVALID : STD_LOGIC;
    signal xfMat2AXIvideo_24_16_1080_1920_1_2_U0_vstream_TKEEP : STD_LOGIC_VECTOR (2 downto 0);
    signal xfMat2AXIvideo_24_16_1080_1920_1_2_U0_vstream_TSTRB : STD_LOGIC_VECTOR (2 downto 0);
    signal xfMat2AXIvideo_24_16_1080_1920_1_2_U0_vstream_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2AXIvideo_24_16_1080_1920_1_2_U0_vstream_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2AXIvideo_24_16_1080_1920_1_2_U0_vstream_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2AXIvideo_24_16_1080_1920_1_2_U0_vstream_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal img_data_full_n : STD_LOGIC;
    signal img_data_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal img_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal img_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal img_data_empty_n : STD_LOGIC;
    signal img_rows_c_full_n : STD_LOGIC;
    signal img_rows_c_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal img_rows_c_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal img_rows_c_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal img_rows_c_empty_n : STD_LOGIC;
    signal img_cols_c_full_n : STD_LOGIC;
    signal img_cols_c_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_cols_c_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal img_cols_c_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal img_cols_c_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal start_for_xfMat2AXIvideo_24_16_1080_1920_1_2_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xfMat2AXIvideo_24_16_1080_1920_1_2_U0_full_n : STD_LOGIC;
    signal start_for_xfMat2AXIvideo_24_16_1080_1920_1_2_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xfMat2AXIvideo_24_16_1080_1920_1_2_U0_empty_n : STD_LOGIC;

    component mem2stream_mem2mat_1080_1920_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (10 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (7 downto 0);
        img_data_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        img_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_data_full_n : IN STD_LOGIC;
        img_data_write : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        pMemPort : IN STD_LOGIC_VECTOR (63 downto 0);
        baseAddr_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        baseAddr_ce0 : OUT STD_LOGIC;
        baseAddr_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        w : IN STD_LOGIC_VECTOR (31 downto 0);
        indexr : OUT STD_LOGIC_VECTOR (31 downto 0);
        indexr_ap_vld : OUT STD_LOGIC;
        img_rows_c_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        img_rows_c_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_rows_c_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_rows_c_full_n : IN STD_LOGIC;
        img_rows_c_write : OUT STD_LOGIC;
        img_cols_c_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_cols_c_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_cols_c_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_cols_c_full_n : IN STD_LOGIC;
        img_cols_c_write : OUT STD_LOGIC );
    end component;


    component mem2stream_xfMat2AXIvideo_24_16_1080_1920_1_2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        img_1_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        img_1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_1_empty_n : IN STD_LOGIC;
        img_1_read : OUT STD_LOGIC;
        img_2_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_2_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_2_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_2_empty_n : IN STD_LOGIC;
        img_2_read : OUT STD_LOGIC;
        img_data_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        img_data_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_data_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_data_empty_n : IN STD_LOGIC;
        img_data_read : OUT STD_LOGIC;
        vstream_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
        vstream_TVALID : OUT STD_LOGIC;
        vstream_TREADY : IN STD_LOGIC;
        vstream_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
        vstream_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
        vstream_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        vstream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        vstream_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
        vstream_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component mem2stream_fifo_w24_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (23 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (23 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component mem2stream_fifo_w11_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (10 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (10 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component mem2stream_fifo_w8_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component mem2stream_start_for_xfMat2AXIvideo_24_16_1080_1920_1_2_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component mem2stream_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        pMemPort : OUT STD_LOGIC_VECTOR (63 downto 0);
        rows : OUT STD_LOGIC_VECTOR (31 downto 0);
        cols : OUT STD_LOGIC_VECTOR (31 downto 0);
        baseAddr_address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        baseAddr_ce0 : IN STD_LOGIC;
        baseAddr_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component mem2stream_gmem_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;



begin
    control_s_axi_U : component mem2stream_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        pMemPort => pMemPort,
        rows => rows,
        cols => cols,
        baseAddr_address0 => mem2mat_1080_1920_U0_baseAddr_address0,
        baseAddr_ce0 => mem2mat_1080_1920_U0_baseAddr_ce0,
        baseAddr_q0 => baseAddr_q0,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    gmem_m_axi_U : component mem2stream_gmem_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 5,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 32,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_gmem_AWVALID,
        AWREADY => m_axi_gmem_AWREADY,
        AWADDR => m_axi_gmem_AWADDR,
        AWID => m_axi_gmem_AWID,
        AWLEN => m_axi_gmem_AWLEN,
        AWSIZE => m_axi_gmem_AWSIZE,
        AWBURST => m_axi_gmem_AWBURST,
        AWLOCK => m_axi_gmem_AWLOCK,
        AWCACHE => m_axi_gmem_AWCACHE,
        AWPROT => m_axi_gmem_AWPROT,
        AWQOS => m_axi_gmem_AWQOS,
        AWREGION => m_axi_gmem_AWREGION,
        AWUSER => m_axi_gmem_AWUSER,
        WVALID => m_axi_gmem_WVALID,
        WREADY => m_axi_gmem_WREADY,
        WDATA => m_axi_gmem_WDATA,
        WSTRB => m_axi_gmem_WSTRB,
        WLAST => m_axi_gmem_WLAST,
        WID => m_axi_gmem_WID,
        WUSER => m_axi_gmem_WUSER,
        ARVALID => m_axi_gmem_ARVALID,
        ARREADY => m_axi_gmem_ARREADY,
        ARADDR => m_axi_gmem_ARADDR,
        ARID => m_axi_gmem_ARID,
        ARLEN => m_axi_gmem_ARLEN,
        ARSIZE => m_axi_gmem_ARSIZE,
        ARBURST => m_axi_gmem_ARBURST,
        ARLOCK => m_axi_gmem_ARLOCK,
        ARCACHE => m_axi_gmem_ARCACHE,
        ARPROT => m_axi_gmem_ARPROT,
        ARQOS => m_axi_gmem_ARQOS,
        ARREGION => m_axi_gmem_ARREGION,
        ARUSER => m_axi_gmem_ARUSER,
        RVALID => m_axi_gmem_RVALID,
        RREADY => m_axi_gmem_RREADY,
        RDATA => m_axi_gmem_RDATA,
        RLAST => m_axi_gmem_RLAST,
        RID => m_axi_gmem_RID,
        RUSER => m_axi_gmem_RUSER,
        RRESP => m_axi_gmem_RRESP,
        BVALID => m_axi_gmem_BVALID,
        BREADY => m_axi_gmem_BREADY,
        BRESP => m_axi_gmem_BRESP,
        BID => m_axi_gmem_BID,
        BUSER => m_axi_gmem_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => mem2mat_1080_1920_U0_m_axi_gmem_ARVALID,
        I_ARREADY => gmem_ARREADY,
        I_ARADDR => mem2mat_1080_1920_U0_m_axi_gmem_ARADDR,
        I_ARLEN => mem2mat_1080_1920_U0_m_axi_gmem_ARLEN,
        I_RVALID => gmem_RVALID,
        I_RREADY => mem2mat_1080_1920_U0_m_axi_gmem_RREADY,
        I_RDATA => gmem_RDATA,
        I_RFIFONUM => gmem_RFIFONUM,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWLEN => ap_const_lv32_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem_WREADY,
        I_WDATA => ap_const_lv32_0,
        I_WSTRB => ap_const_lv4_0,
        I_BVALID => gmem_BVALID,
        I_BREADY => ap_const_logic_0);

    mem2mat_1080_1920_U0 : component mem2stream_mem2mat_1080_1920_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => mem2mat_1080_1920_U0_ap_start,
        start_full_n => start_for_xfMat2AXIvideo_24_16_1080_1920_1_2_U0_full_n,
        ap_done => mem2mat_1080_1920_U0_ap_done,
        ap_continue => mem2mat_1080_1920_U0_ap_continue,
        ap_idle => mem2mat_1080_1920_U0_ap_idle,
        ap_ready => mem2mat_1080_1920_U0_ap_ready,
        start_out => mem2mat_1080_1920_U0_start_out,
        start_write => mem2mat_1080_1920_U0_start_write,
        p_read => ap_const_lv11_438,
        p_read1 => ap_const_lv8_80,
        img_data_din => mem2mat_1080_1920_U0_img_data_din,
        img_data_num_data_valid => img_data_num_data_valid,
        img_data_fifo_cap => img_data_fifo_cap,
        img_data_full_n => img_data_full_n,
        img_data_write => mem2mat_1080_1920_U0_img_data_write,
        m_axi_gmem_AWVALID => mem2mat_1080_1920_U0_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => mem2mat_1080_1920_U0_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => mem2mat_1080_1920_U0_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => mem2mat_1080_1920_U0_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => mem2mat_1080_1920_U0_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => mem2mat_1080_1920_U0_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => mem2mat_1080_1920_U0_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => mem2mat_1080_1920_U0_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => mem2mat_1080_1920_U0_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => mem2mat_1080_1920_U0_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => mem2mat_1080_1920_U0_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => mem2mat_1080_1920_U0_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => mem2mat_1080_1920_U0_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => mem2mat_1080_1920_U0_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => mem2mat_1080_1920_U0_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => mem2mat_1080_1920_U0_m_axi_gmem_WLAST,
        m_axi_gmem_WID => mem2mat_1080_1920_U0_m_axi_gmem_WID,
        m_axi_gmem_WUSER => mem2mat_1080_1920_U0_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => mem2mat_1080_1920_U0_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => gmem_ARREADY,
        m_axi_gmem_ARADDR => mem2mat_1080_1920_U0_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => mem2mat_1080_1920_U0_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => mem2mat_1080_1920_U0_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => mem2mat_1080_1920_U0_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => mem2mat_1080_1920_U0_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => mem2mat_1080_1920_U0_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => mem2mat_1080_1920_U0_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => mem2mat_1080_1920_U0_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => mem2mat_1080_1920_U0_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => mem2mat_1080_1920_U0_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => mem2mat_1080_1920_U0_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => gmem_RVALID,
        m_axi_gmem_RREADY => mem2mat_1080_1920_U0_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => gmem_RDATA,
        m_axi_gmem_RLAST => gmem_RLAST,
        m_axi_gmem_RID => gmem_RID,
        m_axi_gmem_RFIFONUM => gmem_RFIFONUM,
        m_axi_gmem_RUSER => gmem_RUSER,
        m_axi_gmem_RRESP => gmem_RRESP,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => mem2mat_1080_1920_U0_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        pMemPort => pMemPort,
        baseAddr_address0 => mem2mat_1080_1920_U0_baseAddr_address0,
        baseAddr_ce0 => mem2mat_1080_1920_U0_baseAddr_ce0,
        baseAddr_q0 => baseAddr_q0,
        w => indexw,
        indexr => mem2mat_1080_1920_U0_indexr,
        indexr_ap_vld => mem2mat_1080_1920_U0_indexr_ap_vld,
        img_rows_c_din => mem2mat_1080_1920_U0_img_rows_c_din,
        img_rows_c_num_data_valid => img_rows_c_num_data_valid,
        img_rows_c_fifo_cap => img_rows_c_fifo_cap,
        img_rows_c_full_n => img_rows_c_full_n,
        img_rows_c_write => mem2mat_1080_1920_U0_img_rows_c_write,
        img_cols_c_din => mem2mat_1080_1920_U0_img_cols_c_din,
        img_cols_c_num_data_valid => img_cols_c_num_data_valid,
        img_cols_c_fifo_cap => img_cols_c_fifo_cap,
        img_cols_c_full_n => img_cols_c_full_n,
        img_cols_c_write => mem2mat_1080_1920_U0_img_cols_c_write);

    xfMat2AXIvideo_24_16_1080_1920_1_2_U0 : component mem2stream_xfMat2AXIvideo_24_16_1080_1920_1_2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_ap_start,
        ap_done => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_ap_done,
        ap_continue => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_ap_continue,
        ap_idle => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_ap_idle,
        ap_ready => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_ap_ready,
        img_1_dout => img_rows_c_dout,
        img_1_num_data_valid => img_rows_c_num_data_valid,
        img_1_fifo_cap => img_rows_c_fifo_cap,
        img_1_empty_n => img_rows_c_empty_n,
        img_1_read => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_img_1_read,
        img_2_dout => img_cols_c_dout,
        img_2_num_data_valid => img_cols_c_num_data_valid,
        img_2_fifo_cap => img_cols_c_fifo_cap,
        img_2_empty_n => img_cols_c_empty_n,
        img_2_read => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_img_2_read,
        img_data_dout => img_data_dout,
        img_data_num_data_valid => img_data_num_data_valid,
        img_data_fifo_cap => img_data_fifo_cap,
        img_data_empty_n => img_data_empty_n,
        img_data_read => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_img_data_read,
        vstream_TDATA => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_vstream_TDATA,
        vstream_TVALID => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_vstream_TVALID,
        vstream_TREADY => vstream_TREADY,
        vstream_TKEEP => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_vstream_TKEEP,
        vstream_TSTRB => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_vstream_TSTRB,
        vstream_TUSER => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_vstream_TUSER,
        vstream_TLAST => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_vstream_TLAST,
        vstream_TID => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_vstream_TID,
        vstream_TDEST => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_vstream_TDEST);

    img_data_U : component mem2stream_fifo_w24_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => mem2mat_1080_1920_U0_img_data_din,
        if_full_n => img_data_full_n,
        if_write => mem2mat_1080_1920_U0_img_data_write,
        if_dout => img_data_dout,
        if_num_data_valid => img_data_num_data_valid,
        if_fifo_cap => img_data_fifo_cap,
        if_empty_n => img_data_empty_n,
        if_read => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_img_data_read);

    img_rows_c_U : component mem2stream_fifo_w11_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => mem2mat_1080_1920_U0_img_rows_c_din,
        if_full_n => img_rows_c_full_n,
        if_write => mem2mat_1080_1920_U0_img_rows_c_write,
        if_dout => img_rows_c_dout,
        if_num_data_valid => img_rows_c_num_data_valid,
        if_fifo_cap => img_rows_c_fifo_cap,
        if_empty_n => img_rows_c_empty_n,
        if_read => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_img_1_read);

    img_cols_c_U : component mem2stream_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => mem2mat_1080_1920_U0_img_cols_c_din,
        if_full_n => img_cols_c_full_n,
        if_write => mem2mat_1080_1920_U0_img_cols_c_write,
        if_dout => img_cols_c_dout,
        if_num_data_valid => img_cols_c_num_data_valid,
        if_fifo_cap => img_cols_c_fifo_cap,
        if_empty_n => img_cols_c_empty_n,
        if_read => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_img_2_read);

    start_for_xfMat2AXIvideo_24_16_1080_1920_1_2_U0_U : component mem2stream_start_for_xfMat2AXIvideo_24_16_1080_1920_1_2_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xfMat2AXIvideo_24_16_1080_1920_1_2_U0_din,
        if_full_n => start_for_xfMat2AXIvideo_24_16_1080_1920_1_2_U0_full_n,
        if_write => mem2mat_1080_1920_U0_start_write,
        if_dout => start_for_xfMat2AXIvideo_24_16_1080_1920_1_2_U0_dout,
        if_empty_n => start_for_xfMat2AXIvideo_24_16_1080_1920_1_2_U0_empty_n,
        if_read => xfMat2AXIvideo_24_16_1080_1920_1_2_U0_ap_ready);




    ap_done <= ap_sync_done;
    ap_idle <= (xfMat2AXIvideo_24_16_1080_1920_1_2_U0_ap_idle and mem2mat_1080_1920_U0_ap_idle);
    ap_ready <= mem2mat_1080_1920_U0_ap_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_done <= (xfMat2AXIvideo_24_16_1080_1920_1_2_U0_ap_done and mem2mat_1080_1920_U0_ap_done);
    gmem_RID <= ap_const_lv1_0;
    gmem_RLAST <= ap_const_logic_0;
    gmem_RRESP <= ap_const_lv2_0;
    gmem_RUSER <= ap_const_lv1_0;
    indexr <= mem2mat_1080_1920_U0_indexr;
    mem2mat_1080_1920_U0_ap_continue <= ap_sync_done;
    mem2mat_1080_1920_U0_ap_start <= ap_start;
    start_for_xfMat2AXIvideo_24_16_1080_1920_1_2_U0_din <= (0=>ap_const_logic_1, others=>'-');
    vstream_TDATA <= xfMat2AXIvideo_24_16_1080_1920_1_2_U0_vstream_TDATA;
    vstream_TDEST <= xfMat2AXIvideo_24_16_1080_1920_1_2_U0_vstream_TDEST;
    vstream_TID <= xfMat2AXIvideo_24_16_1080_1920_1_2_U0_vstream_TID;
    vstream_TKEEP <= xfMat2AXIvideo_24_16_1080_1920_1_2_U0_vstream_TKEEP;
    vstream_TLAST <= xfMat2AXIvideo_24_16_1080_1920_1_2_U0_vstream_TLAST;
    vstream_TSTRB <= xfMat2AXIvideo_24_16_1080_1920_1_2_U0_vstream_TSTRB;
    vstream_TUSER <= xfMat2AXIvideo_24_16_1080_1920_1_2_U0_vstream_TUSER;
    vstream_TVALID <= xfMat2AXIvideo_24_16_1080_1920_1_2_U0_vstream_TVALID;
    xfMat2AXIvideo_24_16_1080_1920_1_2_U0_ap_continue <= ap_sync_done;
    xfMat2AXIvideo_24_16_1080_1920_1_2_U0_ap_start <= start_for_xfMat2AXIvideo_24_16_1080_1920_1_2_U0_empty_n;
end behav;
